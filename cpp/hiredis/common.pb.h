// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace commonproto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_common_2eproto();
void protobuf_AssignDesc_common_2eproto();
void protobuf_ShutdownFile_common_2eproto();

class pb_level_id_t;
class pb_server_info_t;
class pb_player_base_info_t;
class pb_level_state_t;
class pb_level_state_list_t;
class pb_mijing_t;
class pb_mijing_list_t;
class pb_hero_equip_t;
class pb_hero_attr_t;
class pb_hero_attr_list_t;
class pb_skill_t;
class pb_skill_list_t;
class pb_hero_t;
class pb_hero_list_t;
class pb_queue_hero_t;
class pb_battle_queue_t;
class pb_battle_queue_list_t;
class pb_attr_t;
class pb_attr_list_t;
class pb_item_t;
class pb_level_prize_t;
class pb_item_list_t;
class pb_level_prize_list_t;
class pb_monster_t;
class pb_monster_list_t;
class pb_rank50_self_t;
class pb_task_t;
class pb_task_list_t;
class pb_event_t;
class pb_event_list_t;
class pb_event_idc_t;
class pb_event_idc_list_t;
class pb_event_op_t;
class pb_event_op_list_t;
class pb_money_t;
class pb_attachment_t;
class pb_mail_t;
class pb_mail_list_t;
class pb_challenge_player_t;
class pb_challenge_list_t;
class pb_exped_opponent_t;
class pb_exped_opponent_list_t;
class pb_arena_history_entry_t;
class pb_exped_history_entry_t;
class pb_exped_survive_hero_t;
class pb_exped_survive_hero_list_t;
class pb_rank_player_t;
class pb_rank_player_list_t;
class pb_enemies_rank_list_t;

enum pb_server_type_t {
  SERVER_TYPE_ALL = 0,
  SERVER_TYPE_ONLINE = 1,
  SERVER_TYPE_LOGIN = 2,
  SERVER_TYPE_SWITCH = 3
};
bool pb_server_type_t_IsValid(int value);
const pb_server_type_t pb_server_type_t_MIN = SERVER_TYPE_ALL;
const pb_server_type_t pb_server_type_t_MAX = SERVER_TYPE_SWITCH;
const int pb_server_type_t_ARRAYSIZE = pb_server_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_server_type_t_descriptor();
inline const ::std::string& pb_server_type_t_Name(pb_server_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_server_type_t_descriptor(), value);
}
inline bool pb_server_type_t_Parse(
    const ::std::string& name, pb_server_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_server_type_t>(
    pb_server_type_t_descriptor(), name, value);
}
enum pb_server_state_t {
  SMOOTH = 1,
  CROWD = 2,
  FULL = 3
};
bool pb_server_state_t_IsValid(int value);
const pb_server_state_t pb_server_state_t_MIN = SMOOTH;
const pb_server_state_t pb_server_state_t_MAX = FULL;
const int pb_server_state_t_ARRAYSIZE = pb_server_state_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_server_state_t_descriptor();
inline const ::std::string& pb_server_state_t_Name(pb_server_state_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_server_state_t_descriptor(), value);
}
inline bool pb_server_state_t_Parse(
    const ::std::string& name, pb_server_state_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_server_state_t>(
    pb_server_state_t_descriptor(), name, value);
}
enum pb_money_type_t {
  DIAMOND_MONEY = 1,
  GOLD_MONEY = 2,
  ARENA_MONEY = 3
};
bool pb_money_type_t_IsValid(int value);
const pb_money_type_t pb_money_type_t_MIN = DIAMOND_MONEY;
const pb_money_type_t pb_money_type_t_MAX = ARENA_MONEY;
const int pb_money_type_t_ARRAYSIZE = pb_money_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_money_type_t_descriptor();
inline const ::std::string& pb_money_type_t_Name(pb_money_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_money_type_t_descriptor(), value);
}
inline bool pb_money_type_t_Parse(
    const ::std::string& name, pb_money_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_money_type_t>(
    pb_money_type_t_descriptor(), name, value);
}
enum pb_unlock_type_t {
  EXPED_UNLOCK = 1,
  SHOP_UNLOCK = 2,
  ARENA_UNLOCK = 3,
  ELITE_UNLOCK = 4,
  EQUIP_MIJING_L1_UNLOCK = 5,
  EQUIP_MIJING_L2_UNLOCK = 6,
  EQUIP_MIJING_L3_UNLOCK = 7,
  EQUIP_MIJING_L4_UNLOCK = 8,
  EQUIP_MIJING_L5_UNLOCK = 9,
  EQUIP_MIJING_L6_UNLOCK = 10,
  EXP_MIJING_L1_UNLOCK = 11,
  EXP_MIJING_L2_UNLOCK = 12,
  EXP_MIJING_L3_UNLOCK = 13,
  EXP_MIJING_L4_UNLOCK = 14,
  EXP_MIJING_L5_UNLOCK = 15,
  EXP_MIJING_L6_UNLOCK = 16,
  VIP_TREASURE_VISABLE_UNLOCK = 17,
  VIP_TREASURE_USEABLE_UNLOCK = 18,
  TASK_USEABLE_UNLOCK = 20,
  SAODANG_UNLOCK = 21
};
bool pb_unlock_type_t_IsValid(int value);
const pb_unlock_type_t pb_unlock_type_t_MIN = EXPED_UNLOCK;
const pb_unlock_type_t pb_unlock_type_t_MAX = SAODANG_UNLOCK;
const int pb_unlock_type_t_ARRAYSIZE = pb_unlock_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_unlock_type_t_descriptor();
inline const ::std::string& pb_unlock_type_t_Name(pb_unlock_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_unlock_type_t_descriptor(), value);
}
inline bool pb_unlock_type_t_Parse(
    const ::std::string& name, pb_unlock_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_unlock_type_t>(
    pb_unlock_type_t_descriptor(), name, value);
}
enum pb_novice_type_t {
  NOV_LOTTERY_GOLD = 1,
  NOV_LOTTERY_DIAMOND = 2,
  NOV_TUTORIAL = 3,
  NOV_LOTTERY_GOLD_SECOND = 4,
  NOV_FIRST_BLOOD = 5,
  NOV_HERO_SUMMON = 6,
  NOV_EQUIP_ARM = 7,
  NOV_ARENA = 8,
  NOV_EXPED = 9,
  NOV_MIJING = 10,
  NOV_ELITE = 11,
  NOV_STAR_RATING_UPGRADE = 12,
  NOV_RATING_UPGRADE = 13,
  NOV_USE_EXPITEM = 14,
  NOV_BATTLE_QUEUE = 15,
  NOV_DAILY_TASK = 16,
  NOV_MAIN_EVENT = 17,
  NOV_DEATH = 18,
  NOV_SKILL_RATINGUP = 19
};
bool pb_novice_type_t_IsValid(int value);
const pb_novice_type_t pb_novice_type_t_MIN = NOV_LOTTERY_GOLD;
const pb_novice_type_t pb_novice_type_t_MAX = NOV_SKILL_RATINGUP;
const int pb_novice_type_t_ARRAYSIZE = pb_novice_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_novice_type_t_descriptor();
inline const ::std::string& pb_novice_type_t_Name(pb_novice_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_novice_type_t_descriptor(), value);
}
inline bool pb_novice_type_t_Parse(
    const ::std::string& name, pb_novice_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_novice_type_t>(
    pb_novice_type_t_descriptor(), name, value);
}
enum pb_open_type_t {
  EXPED_O_TYPE = 1
};
bool pb_open_type_t_IsValid(int value);
const pb_open_type_t pb_open_type_t_MIN = EXPED_O_TYPE;
const pb_open_type_t pb_open_type_t_MAX = EXPED_O_TYPE;
const int pb_open_type_t_ARRAYSIZE = pb_open_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_open_type_t_descriptor();
inline const ::std::string& pb_open_type_t_Name(pb_open_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_open_type_t_descriptor(), value);
}
inline bool pb_open_type_t_Parse(
    const ::std::string& name, pb_open_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_open_type_t>(
    pb_open_type_t_descriptor(), name, value);
}
enum pb_level_star_t {
  LEVEL_STAR_NONE = 0,
  LEVEL_STAR_ONE = 1,
  LEVEL_STAR_TWO = 2,
  LEVEL_STAR_THREE = 3
};
bool pb_level_star_t_IsValid(int value);
const pb_level_star_t pb_level_star_t_MIN = LEVEL_STAR_NONE;
const pb_level_star_t pb_level_star_t_MAX = LEVEL_STAR_THREE;
const int pb_level_star_t_ARRAYSIZE = pb_level_star_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_level_star_t_descriptor();
inline const ::std::string& pb_level_star_t_Name(pb_level_star_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_level_star_t_descriptor(), value);
}
inline bool pb_level_star_t_Parse(
    const ::std::string& name, pb_level_star_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_level_star_t>(
    pb_level_star_t_descriptor(), name, value);
}
enum pb_level_type_t {
  LEVEL_STORY = 0,
  LEVEL_ARENA = 20,
  LEVEL_ELITE = 30,
  LEVEL_MIJING = 40
};
bool pb_level_type_t_IsValid(int value);
const pb_level_type_t pb_level_type_t_MIN = LEVEL_STORY;
const pb_level_type_t pb_level_type_t_MAX = LEVEL_MIJING;
const int pb_level_type_t_ARRAYSIZE = pb_level_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_level_type_t_descriptor();
inline const ::std::string& pb_level_type_t_Name(pb_level_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_level_type_t_descriptor(), value);
}
inline bool pb_level_type_t_Parse(
    const ::std::string& name, pb_level_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_level_type_t>(
    pb_level_type_t_descriptor(), name, value);
}
enum pb_queue_type_t {
  QUEUE_STORY = 0,
  QUEUE_ELITE = 10,
  QUEUE_ARENA_DEF = 20,
  QUEUE_ARENA_ATK = 30,
  QUEUE_MIJING_MONEY = 40,
  QUEUE_MIJING_EXP = 50,
  QUEUE_MIJING_ITEM1 = 60,
  QUEUE_MIJING_ITEM2 = 70,
  QUEUE_MIJING_ITEM3 = 90,
  QUEUE_EXPED = 100
};
bool pb_queue_type_t_IsValid(int value);
const pb_queue_type_t pb_queue_type_t_MIN = QUEUE_STORY;
const pb_queue_type_t pb_queue_type_t_MAX = QUEUE_EXPED;
const int pb_queue_type_t_ARRAYSIZE = pb_queue_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_queue_type_t_descriptor();
inline const ::std::string& pb_queue_type_t_Name(pb_queue_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_queue_type_t_descriptor(), value);
}
inline bool pb_queue_type_t_Parse(
    const ::std::string& name, pb_queue_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_queue_type_t>(
    pb_queue_type_t_descriptor(), name, value);
}
enum pb_event_type_t {
  e_ev_t_player_lv = 1,
  e_ev_t_hero_lv = 2,
  e_ev_t_hero_num4_lv = 3,
  e_ev_t_hero_num8_lv = 4,
  e_ev_t_hero_num12_lv = 5,
  e_ev_t_hero_num16_lv = 6,
  e_ev_t_hero_num20_lv = 7,
  e_ev_t_hero_num25_lv = 8,
  e_ev_t_hero_num30_lv = 9,
  e_ev_t_hero_green_rating_num = 10,
  e_ev_t_hero_num4_rating = 11,
  e_ev_t_hero_num8_rating = 12,
  e_ev_t_hero_num12_rating = 13,
  e_ev_t_hero_num20_rating = 14,
  e_ev_t_hero_num30_rating = 15,
  e_ev_t_hero_num = 16,
  e_ev_t_hero_star_rating = 17,
  e_ev_t_hero_num4_star_rating = 18,
  e_ev_t_hero_num12_star_rating = 19,
  e_ev_t_hero_num20_star_rating = 20,
  e_ev_t_hero_num30_star_rating = 21,
  e_ev_t_level = 22,
  e_ev_t_elite = 23,
  e_ev_t_level_again = 24,
  e_ev_t_elite_again = 25,
  e_ev_t_first_charge = 26,
  e_ev_t_first_hero_rank_up = 27,
  e_ev_t_player_lv_new = 28,
  e_ev_t_hero_summon_gaoqiang = 29,
  e_ev_t_hero_summon_lishuang = 30,
  e_ev_t_hero_summon_sanyan = 31,
  e_ev_t_hero_green1_rating_num = 32,
  e_ev_t_hero_blue_rating_num = 33,
  e_ev_t_hero_blue1_rating_num = 34,
  e_ev_t_hero_blue2_rating_num = 35,
  e_ev_t_hero_purple_rating_num = 36,
  e_ev_t_hero_purple1_rating_num = 37,
  e_ev_t_hero_purple2_rating_num = 38,
  e_ev_t_hero_purple3_rating_num = 39,
  e_ev_t_hero_purple4_rating_num = 40,
  e_ev_t_hero_orange_rating_num = 41
};
bool pb_event_type_t_IsValid(int value);
const pb_event_type_t pb_event_type_t_MIN = e_ev_t_player_lv;
const pb_event_type_t pb_event_type_t_MAX = e_ev_t_hero_orange_rating_num;
const int pb_event_type_t_ARRAYSIZE = pb_event_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_event_type_t_descriptor();
inline const ::std::string& pb_event_type_t_Name(pb_event_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_event_type_t_descriptor(), value);
}
inline bool pb_event_type_t_Parse(
    const ::std::string& name, pb_event_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_event_type_t>(
    pb_event_type_t_descriptor(), name, value);
}
enum pb_hero_attr_type_t {
  HERO_LV = 1,
  HERO_EXP = 2,
  HERO_SKILL_ACTIVE_LV = 3,
  HERO_SKILL_ACTIVE_RATING = 4,
  HERO_SKILL_PASSIVE_LV = 5,
  HERO_SKILL_PASSIVE_RATING = 6,
  HERO_SKILL_FRIEND_LV = 7,
  HERO_SKILL_FRIEND_RATING = 8,
  HERO_SKILL_COMBO_LV = 9,
  HERO_SKILL_COMBO_RATING = 10,
  HERO_RATING = 11,
  HERO_STAR_RATING = 12
};
bool pb_hero_attr_type_t_IsValid(int value);
const pb_hero_attr_type_t pb_hero_attr_type_t_MIN = HERO_LV;
const pb_hero_attr_type_t pb_hero_attr_type_t_MAX = HERO_STAR_RATING;
const int pb_hero_attr_type_t_ARRAYSIZE = pb_hero_attr_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_hero_attr_type_t_descriptor();
inline const ::std::string& pb_hero_attr_type_t_Name(pb_hero_attr_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_hero_attr_type_t_descriptor(), value);
}
inline bool pb_hero_attr_type_t_Parse(
    const ::std::string& name, pb_hero_attr_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_hero_attr_type_t>(
    pb_hero_attr_type_t_descriptor(), name, value);
}
enum pb_skill_type_t {
  SKILL_ACTIVE = 1,
  SKILL_FRIEND = 2,
  SKILL_COMBO = 3,
  SKILL_PASSIVE = 4
};
bool pb_skill_type_t_IsValid(int value);
const pb_skill_type_t pb_skill_type_t_MIN = SKILL_ACTIVE;
const pb_skill_type_t pb_skill_type_t_MAX = SKILL_PASSIVE;
const int pb_skill_type_t_ARRAYSIZE = pb_skill_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_skill_type_t_descriptor();
inline const ::std::string& pb_skill_type_t_Name(pb_skill_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_skill_type_t_descriptor(), value);
}
inline bool pb_skill_type_t_Parse(
    const ::std::string& name, pb_skill_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_skill_type_t>(
    pb_skill_type_t_descriptor(), name, value);
}
enum pb_lottery_type_t {
  LOTTERY_GOLD_1 = 1,
  LOTTERY_GOLD_10 = 2,
  LOTTERY_DIAMOND_1 = 3,
  LOTTERY_DIAMOND_10 = 4,
  LOTTERY_GOLD_FREE = 5,
  LOTTERY_DIAMOND_FREE = 6,
  LOTTERY_VIP = 7
};
bool pb_lottery_type_t_IsValid(int value);
const pb_lottery_type_t pb_lottery_type_t_MIN = LOTTERY_GOLD_1;
const pb_lottery_type_t pb_lottery_type_t_MAX = LOTTERY_VIP;
const int pb_lottery_type_t_ARRAYSIZE = pb_lottery_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_lottery_type_t_descriptor();
inline const ::std::string& pb_lottery_type_t_Name(pb_lottery_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_lottery_type_t_descriptor(), value);
}
inline bool pb_lottery_type_t_Parse(
    const ::std::string& name, pb_lottery_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_lottery_type_t>(
    pb_lottery_type_t_descriptor(), name, value);
}
enum pb_saodang_type_t {
  SAODANG_1 = 1,
  SAODANG_10 = 2,
  SAODANG_ALL = 3,
  SAODANG_DIAMOND_1 = 4,
  SAODANG_DIAMOND_10 = 5,
  SAODANG_DIAMOND_ALL = 6
};
bool pb_saodang_type_t_IsValid(int value);
const pb_saodang_type_t pb_saodang_type_t_MIN = SAODANG_1;
const pb_saodang_type_t pb_saodang_type_t_MAX = SAODANG_DIAMOND_ALL;
const int pb_saodang_type_t_ARRAYSIZE = pb_saodang_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_saodang_type_t_descriptor();
inline const ::std::string& pb_saodang_type_t_Name(pb_saodang_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_saodang_type_t_descriptor(), value);
}
inline bool pb_saodang_type_t_Parse(
    const ::std::string& name, pb_saodang_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_saodang_type_t>(
    pb_saodang_type_t_descriptor(), name, value);
}
enum pb_midas_type_t {
  MIDAS_ONCE = 1,
  MIDAS_COMBO = 2
};
bool pb_midas_type_t_IsValid(int value);
const pb_midas_type_t pb_midas_type_t_MIN = MIDAS_ONCE;
const pb_midas_type_t pb_midas_type_t_MAX = MIDAS_COMBO;
const int pb_midas_type_t_ARRAYSIZE = pb_midas_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_midas_type_t_descriptor();
inline const ::std::string& pb_midas_type_t_Name(pb_midas_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_midas_type_t_descriptor(), value);
}
inline bool pb_midas_type_t_Parse(
    const ::std::string& name, pb_midas_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_midas_type_t>(
    pb_midas_type_t_descriptor(), name, value);
}
enum pb_stamina_task_type_t {
  LUNCH = 1,
  DINNER = 2,
  MIDNIGHT_SNACK = 3
};
bool pb_stamina_task_type_t_IsValid(int value);
const pb_stamina_task_type_t pb_stamina_task_type_t_MIN = LUNCH;
const pb_stamina_task_type_t pb_stamina_task_type_t_MAX = MIDNIGHT_SNACK;
const int pb_stamina_task_type_t_ARRAYSIZE = pb_stamina_task_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* pb_stamina_task_type_t_descriptor();
inline const ::std::string& pb_stamina_task_type_t_Name(pb_stamina_task_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    pb_stamina_task_type_t_descriptor(), value);
}
inline bool pb_stamina_task_type_t_Parse(
    const ::std::string& name, pb_stamina_task_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<pb_stamina_task_type_t>(
    pb_stamina_task_type_t_descriptor(), name, value);
}
// ===================================================================

class pb_level_id_t : public ::google::protobuf::Message {
 public:
  pb_level_id_t();
  virtual ~pb_level_id_t();

  pb_level_id_t(const pb_level_id_t& from);

  inline pb_level_id_t& operator=(const pb_level_id_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_level_id_t& default_instance();

  void Swap(pb_level_id_t* other);

  // implements Message ----------------------------------------------

  pb_level_id_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_level_id_t& from);
  void MergeFrom(const pb_level_id_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 chapter_id = 1;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::uint32 value);

  // required uint32 section_id = 2;
  inline bool has_section_id() const;
  inline void clear_section_id();
  static const int kSectionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 section_id() const;
  inline void set_section_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_level_id_t)
 private:
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_section_id();
  inline void clear_has_section_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 chapter_id_;
  ::google::protobuf::uint32 section_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_level_id_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_server_info_t : public ::google::protobuf::Message {
 public:
  pb_server_info_t();
  virtual ~pb_server_info_t();

  pb_server_info_t(const pb_server_info_t& from);

  inline pb_server_info_t& operator=(const pb_server_info_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_server_info_t& default_instance();

  void Swap(pb_server_info_t* other);

  // implements Message ----------------------------------------------

  pb_server_info_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_server_info_t& from);
  void MergeFrom(const pb_server_info_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .commonproto.pb_server_type_t type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::commonproto::pb_server_type_t type() const;
  inline void set_type(::commonproto::pb_server_type_t value);

  // required uint32 svr_id = 2;
  inline bool has_svr_id() const;
  inline void clear_svr_id();
  static const int kSvrIdFieldNumber = 2;
  inline ::google::protobuf::uint32 svr_id() const;
  inline void set_svr_id(::google::protobuf::uint32 value);

  // required uint32 ip = 3;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 3;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);

  // required uint32 port = 4;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 4;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);

  // optional uint32 total_user_num = 5;
  inline bool has_total_user_num() const;
  inline void clear_total_user_num();
  static const int kTotalUserNumFieldNumber = 5;
  inline ::google::protobuf::uint32 total_user_num() const;
  inline void set_total_user_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_server_info_t)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_svr_id();
  inline void clear_has_svr_id();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_total_user_num();
  inline void clear_has_total_user_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;
  ::google::protobuf::uint32 svr_id_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::uint32 total_user_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_server_info_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_player_base_info_t : public ::google::protobuf::Message {
 public:
  pb_player_base_info_t();
  virtual ~pb_player_base_info_t();

  pb_player_base_info_t(const pb_player_base_info_t& from);

  inline pb_player_base_info_t& operator=(const pb_player_base_info_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_player_base_info_t& default_instance();

  void Swap(pb_player_base_info_t* other);

  // implements Message ----------------------------------------------

  pb_player_base_info_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_player_base_info_t& from);
  void MergeFrom(const pb_player_base_info_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional string nick = 2;
  inline bool has_nick() const;
  inline void clear_nick();
  static const int kNickFieldNumber = 2;
  inline const ::std::string& nick() const;
  inline void set_nick(const ::std::string& value);
  inline void set_nick(const char* value);
  inline void set_nick(const char* value, size_t size);
  inline ::std::string* mutable_nick();
  inline ::std::string* release_nick();
  inline void set_allocated_nick(::std::string* nick);

  // @@protoc_insertion_point(class_scope:commonproto.pb_player_base_info_t)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_nick();
  inline void clear_has_nick();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* nick_;
  ::google::protobuf::uint32 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_player_base_info_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_level_state_t : public ::google::protobuf::Message {
 public:
  pb_level_state_t();
  virtual ~pb_level_state_t();

  pb_level_state_t(const pb_level_state_t& from);

  inline pb_level_state_t& operator=(const pb_level_state_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_level_state_t& default_instance();

  void Swap(pb_level_state_t* other);

  // implements Message ----------------------------------------------

  pb_level_state_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_level_state_t& from);
  void MergeFrom(const pb_level_state_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 chapter_id = 2;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 2;
  inline ::google::protobuf::uint32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::uint32 value);

  // required uint32 section_id = 3;
  inline bool has_section_id() const;
  inline void clear_section_id();
  static const int kSectionIdFieldNumber = 3;
  inline ::google::protobuf::uint32 section_id() const;
  inline void set_section_id(::google::protobuf::uint32 value);

  // required .commonproto.pb_level_star_t level_star = 4 [default = LEVEL_STAR_NONE];
  inline bool has_level_star() const;
  inline void clear_level_star();
  static const int kLevelStarFieldNumber = 4;
  inline ::commonproto::pb_level_star_t level_star() const;
  inline void set_level_star(::commonproto::pb_level_star_t value);

  // optional uint32 daily_count = 5;
  inline bool has_daily_count() const;
  inline void clear_daily_count();
  static const int kDailyCountFieldNumber = 5;
  inline ::google::protobuf::uint32 daily_count() const;
  inline void set_daily_count(::google::protobuf::uint32 value);

  // optional uint32 count = 6;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 6;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // optional uint32 daily_date = 7;
  inline bool has_daily_date() const;
  inline void clear_daily_date();
  static const int kDailyDateFieldNumber = 7;
  inline ::google::protobuf::uint32 daily_date() const;
  inline void set_daily_date(::google::protobuf::uint32 value);

  // optional uint32 reset_count = 8;
  inline bool has_reset_count() const;
  inline void clear_reset_count();
  static const int kResetCountFieldNumber = 8;
  inline ::google::protobuf::uint32 reset_count() const;
  inline void set_reset_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_level_state_t)
 private:
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_section_id();
  inline void clear_has_section_id();
  inline void set_has_level_star();
  inline void clear_has_level_star();
  inline void set_has_daily_count();
  inline void clear_has_daily_count();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_daily_date();
  inline void clear_has_daily_date();
  inline void set_has_reset_count();
  inline void clear_has_reset_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 chapter_id_;
  ::google::protobuf::uint32 section_id_;
  int level_star_;
  ::google::protobuf::uint32 daily_count_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 daily_date_;
  ::google::protobuf::uint32 reset_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_level_state_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_level_state_list_t : public ::google::protobuf::Message {
 public:
  pb_level_state_list_t();
  virtual ~pb_level_state_list_t();

  pb_level_state_list_t(const pb_level_state_list_t& from);

  inline pb_level_state_list_t& operator=(const pb_level_state_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_level_state_list_t& default_instance();

  void Swap(pb_level_state_list_t* other);

  // implements Message ----------------------------------------------

  pb_level_state_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_level_state_list_t& from);
  void MergeFrom(const pb_level_state_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_level_state_t level_states = 1;
  inline int level_states_size() const;
  inline void clear_level_states();
  static const int kLevelStatesFieldNumber = 1;
  inline const ::commonproto::pb_level_state_t& level_states(int index) const;
  inline ::commonproto::pb_level_state_t* mutable_level_states(int index);
  inline ::commonproto::pb_level_state_t* add_level_states();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_level_state_t >&
      level_states() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_level_state_t >*
      mutable_level_states();

  // @@protoc_insertion_point(class_scope:commonproto.pb_level_state_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_level_state_t > level_states_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_level_state_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_mijing_t : public ::google::protobuf::Message {
 public:
  pb_mijing_t();
  virtual ~pb_mijing_t();

  pb_mijing_t(const pb_mijing_t& from);

  inline pb_mijing_t& operator=(const pb_mijing_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_mijing_t& default_instance();

  void Swap(pb_mijing_t* other);

  // implements Message ----------------------------------------------

  pb_mijing_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_mijing_t& from);
  void MergeFrom(const pb_mijing_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 chapter_id = 1;
  inline bool has_chapter_id() const;
  inline void clear_chapter_id();
  static const int kChapterIdFieldNumber = 1;
  inline ::google::protobuf::uint32 chapter_id() const;
  inline void set_chapter_id(::google::protobuf::uint32 value);

  // optional uint32 daily_count = 3;
  inline bool has_daily_count() const;
  inline void clear_daily_count();
  static const int kDailyCountFieldNumber = 3;
  inline ::google::protobuf::uint32 daily_count() const;
  inline void set_daily_count(::google::protobuf::uint32 value);

  // optional uint32 daily_date = 5;
  inline bool has_daily_date() const;
  inline void clear_daily_date();
  static const int kDailyDateFieldNumber = 5;
  inline ::google::protobuf::uint32 daily_date() const;
  inline void set_daily_date(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_mijing_t)
 private:
  inline void set_has_chapter_id();
  inline void clear_has_chapter_id();
  inline void set_has_daily_count();
  inline void clear_has_daily_count();
  inline void set_has_daily_date();
  inline void clear_has_daily_date();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 chapter_id_;
  ::google::protobuf::uint32 daily_count_;
  ::google::protobuf::uint32 daily_date_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_mijing_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_mijing_list_t : public ::google::protobuf::Message {
 public:
  pb_mijing_list_t();
  virtual ~pb_mijing_list_t();

  pb_mijing_list_t(const pb_mijing_list_t& from);

  inline pb_mijing_list_t& operator=(const pb_mijing_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_mijing_list_t& default_instance();

  void Swap(pb_mijing_list_t* other);

  // implements Message ----------------------------------------------

  pb_mijing_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_mijing_list_t& from);
  void MergeFrom(const pb_mijing_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_mijing_t mijing = 1;
  inline int mijing_size() const;
  inline void clear_mijing();
  static const int kMijingFieldNumber = 1;
  inline const ::commonproto::pb_mijing_t& mijing(int index) const;
  inline ::commonproto::pb_mijing_t* mutable_mijing(int index);
  inline ::commonproto::pb_mijing_t* add_mijing();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_mijing_t >&
      mijing() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_mijing_t >*
      mutable_mijing();

  // @@protoc_insertion_point(class_scope:commonproto.pb_mijing_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_mijing_t > mijing_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_mijing_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_hero_equip_t : public ::google::protobuf::Message {
 public:
  pb_hero_equip_t();
  virtual ~pb_hero_equip_t();

  pb_hero_equip_t(const pb_hero_equip_t& from);

  inline pb_hero_equip_t& operator=(const pb_hero_equip_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_hero_equip_t& default_instance();

  void Swap(pb_hero_equip_t* other);

  // implements Message ----------------------------------------------

  pb_hero_equip_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_hero_equip_t& from);
  void MergeFrom(const pb_hero_equip_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 lv = 1 [default = 1];
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 1;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // required uint32 exp = 2 [default = 0];
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_hero_equip_t)
 private:
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_hero_equip_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_hero_attr_t : public ::google::protobuf::Message {
 public:
  pb_hero_attr_t();
  virtual ~pb_hero_attr_t();

  pb_hero_attr_t(const pb_hero_attr_t& from);

  inline pb_hero_attr_t& operator=(const pb_hero_attr_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_hero_attr_t& default_instance();

  void Swap(pb_hero_attr_t* other);

  // implements Message ----------------------------------------------

  pb_hero_attr_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_hero_attr_t& from);
  void MergeFrom(const pb_hero_attr_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .commonproto.pb_hero_attr_type_t type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::commonproto::pb_hero_attr_type_t type() const;
  inline void set_type(::commonproto::pb_hero_attr_type_t value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_hero_attr_t)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_hero_attr_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_hero_attr_list_t : public ::google::protobuf::Message {
 public:
  pb_hero_attr_list_t();
  virtual ~pb_hero_attr_list_t();

  pb_hero_attr_list_t(const pb_hero_attr_list_t& from);

  inline pb_hero_attr_list_t& operator=(const pb_hero_attr_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_hero_attr_list_t& default_instance();

  void Swap(pb_hero_attr_list_t* other);

  // implements Message ----------------------------------------------

  pb_hero_attr_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_hero_attr_list_t& from);
  void MergeFrom(const pb_hero_attr_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // repeated .commonproto.pb_hero_attr_t hero_attrs = 2;
  inline int hero_attrs_size() const;
  inline void clear_hero_attrs();
  static const int kHeroAttrsFieldNumber = 2;
  inline const ::commonproto::pb_hero_attr_t& hero_attrs(int index) const;
  inline ::commonproto::pb_hero_attr_t* mutable_hero_attrs(int index);
  inline ::commonproto::pb_hero_attr_t* add_hero_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_attr_t >&
      hero_attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_attr_t >*
      mutable_hero_attrs();

  // @@protoc_insertion_point(class_scope:commonproto.pb_hero_attr_list_t)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_attr_t > hero_attrs_;
  ::google::protobuf::uint32 hero_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_hero_attr_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_skill_t : public ::google::protobuf::Message {
 public:
  pb_skill_t();
  virtual ~pb_skill_t();

  pb_skill_t(const pb_skill_t& from);

  inline pb_skill_t& operator=(const pb_skill_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_skill_t& default_instance();

  void Swap(pb_skill_t* other);

  // implements Message ----------------------------------------------

  pb_skill_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_skill_t& from);
  void MergeFrom(const pb_skill_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 skill_lv = 1;
  inline bool has_skill_lv() const;
  inline void clear_skill_lv();
  static const int kSkillLvFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_lv() const;
  inline void set_skill_lv(::google::protobuf::uint32 value);

  // required uint32 skill_rating = 2;
  inline bool has_skill_rating() const;
  inline void clear_skill_rating();
  static const int kSkillRatingFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_rating() const;
  inline void set_skill_rating(::google::protobuf::uint32 value);

  // required .commonproto.pb_skill_type_t skill_index = 3;
  inline bool has_skill_index() const;
  inline void clear_skill_index();
  static const int kSkillIndexFieldNumber = 3;
  inline ::commonproto::pb_skill_type_t skill_index() const;
  inline void set_skill_index(::commonproto::pb_skill_type_t value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_skill_t)
 private:
  inline void set_has_skill_lv();
  inline void clear_has_skill_lv();
  inline void set_has_skill_rating();
  inline void clear_has_skill_rating();
  inline void set_has_skill_index();
  inline void clear_has_skill_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 skill_lv_;
  ::google::protobuf::uint32 skill_rating_;
  int skill_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_skill_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_skill_list_t : public ::google::protobuf::Message {
 public:
  pb_skill_list_t();
  virtual ~pb_skill_list_t();

  pb_skill_list_t(const pb_skill_list_t& from);

  inline pb_skill_list_t& operator=(const pb_skill_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_skill_list_t& default_instance();

  void Swap(pb_skill_list_t* other);

  // implements Message ----------------------------------------------

  pb_skill_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_skill_list_t& from);
  void MergeFrom(const pb_skill_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_skill_t skills = 1;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 1;
  inline const ::commonproto::pb_skill_t& skills(int index) const;
  inline ::commonproto::pb_skill_t* mutable_skills(int index);
  inline ::commonproto::pb_skill_t* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_skill_t >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_skill_t >*
      mutable_skills();

  // @@protoc_insertion_point(class_scope:commonproto.pb_skill_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_skill_t > skills_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_skill_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_hero_t : public ::google::protobuf::Message {
 public:
  pb_hero_t();
  virtual ~pb_hero_t();

  pb_hero_t(const pb_hero_t& from);

  inline pb_hero_t& operator=(const pb_hero_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_hero_t& default_instance();

  void Swap(pb_hero_t* other);

  // implements Message ----------------------------------------------

  pb_hero_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_hero_t& from);
  void MergeFrom(const pb_hero_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // required uint32 lv = 2;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 2;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // required uint32 exp = 3;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // required uint32 rating = 4;
  inline bool has_rating() const;
  inline void clear_rating();
  static const int kRatingFieldNumber = 4;
  inline ::google::protobuf::uint32 rating() const;
  inline void set_rating(::google::protobuf::uint32 value);

  // required uint32 star_rating = 5;
  inline bool has_star_rating() const;
  inline void clear_star_rating();
  static const int kStarRatingFieldNumber = 5;
  inline ::google::protobuf::uint32 star_rating() const;
  inline void set_star_rating(::google::protobuf::uint32 value);

  // repeated .commonproto.pb_hero_equip_t hero_equips = 6;
  inline int hero_equips_size() const;
  inline void clear_hero_equips();
  static const int kHeroEquipsFieldNumber = 6;
  inline const ::commonproto::pb_hero_equip_t& hero_equips(int index) const;
  inline ::commonproto::pb_hero_equip_t* mutable_hero_equips(int index);
  inline ::commonproto::pb_hero_equip_t* add_hero_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_equip_t >&
      hero_equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_equip_t >*
      mutable_hero_equips();

  // repeated .commonproto.pb_skill_t skills = 9;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 9;
  inline const ::commonproto::pb_skill_t& skills(int index) const;
  inline ::commonproto::pb_skill_t* mutable_skills(int index);
  inline ::commonproto::pb_skill_t* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_skill_t >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_skill_t >*
      mutable_skills();

  // optional uint32 cd = 10;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 10;
  inline ::google::protobuf::uint32 cd() const;
  inline void set_cd(::google::protobuf::uint32 value);

  // optional uint32 hp = 11;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 11;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_hero_t)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_rating();
  inline void clear_has_rating();
  inline void set_has_star_rating();
  inline void clear_has_star_rating();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_hp();
  inline void clear_has_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 rating_;
  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_equip_t > hero_equips_;
  ::google::protobuf::uint32 star_rating_;
  ::google::protobuf::uint32 cd_;
  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_skill_t > skills_;
  ::google::protobuf::uint32 hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_hero_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_hero_list_t : public ::google::protobuf::Message {
 public:
  pb_hero_list_t();
  virtual ~pb_hero_list_t();

  pb_hero_list_t(const pb_hero_list_t& from);

  inline pb_hero_list_t& operator=(const pb_hero_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_hero_list_t& default_instance();

  void Swap(pb_hero_list_t* other);

  // implements Message ----------------------------------------------

  pb_hero_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_hero_list_t& from);
  void MergeFrom(const pb_hero_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_hero_t heros = 1;
  inline int heros_size() const;
  inline void clear_heros();
  static const int kHerosFieldNumber = 1;
  inline const ::commonproto::pb_hero_t& heros(int index) const;
  inline ::commonproto::pb_hero_t* mutable_heros(int index);
  inline ::commonproto::pb_hero_t* add_heros();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_t >&
      heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_t >*
      mutable_heros();

  // @@protoc_insertion_point(class_scope:commonproto.pb_hero_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_t > heros_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_hero_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_queue_hero_t : public ::google::protobuf::Message {
 public:
  pb_queue_hero_t();
  virtual ~pb_queue_hero_t();

  pb_queue_hero_t(const pb_queue_hero_t& from);

  inline pb_queue_hero_t& operator=(const pb_queue_hero_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_queue_hero_t& default_instance();

  void Swap(pb_queue_hero_t* other);

  // implements Message ----------------------------------------------

  pb_queue_hero_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_queue_hero_t& from);
  void MergeFrom(const pb_queue_hero_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hero_pos = 1;
  inline bool has_hero_pos() const;
  inline void clear_hero_pos();
  static const int kHeroPosFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_pos() const;
  inline void set_hero_pos(::google::protobuf::uint32 value);

  // required uint32 hero_id = 2;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 star_rating = 3;
  inline bool has_star_rating() const;
  inline void clear_star_rating();
  static const int kStarRatingFieldNumber = 3;
  inline ::google::protobuf::uint32 star_rating() const;
  inline void set_star_rating(::google::protobuf::uint32 value);

  // optional uint32 rating = 4;
  inline bool has_rating() const;
  inline void clear_rating();
  static const int kRatingFieldNumber = 4;
  inline ::google::protobuf::uint32 rating() const;
  inline void set_rating(::google::protobuf::uint32 value);

  // optional uint32 btl_val = 5;
  inline bool has_btl_val() const;
  inline void clear_btl_val();
  static const int kBtlValFieldNumber = 5;
  inline ::google::protobuf::uint32 btl_val() const;
  inline void set_btl_val(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_queue_hero_t)
 private:
  inline void set_has_hero_pos();
  inline void clear_has_hero_pos();
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_star_rating();
  inline void clear_has_star_rating();
  inline void set_has_rating();
  inline void clear_has_rating();
  inline void set_has_btl_val();
  inline void clear_has_btl_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hero_pos_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 star_rating_;
  ::google::protobuf::uint32 rating_;
  ::google::protobuf::uint32 btl_val_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_queue_hero_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_battle_queue_t : public ::google::protobuf::Message {
 public:
  pb_battle_queue_t();
  virtual ~pb_battle_queue_t();

  pb_battle_queue_t(const pb_battle_queue_t& from);

  inline pb_battle_queue_t& operator=(const pb_battle_queue_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_battle_queue_t& default_instance();

  void Swap(pb_battle_queue_t* other);

  // implements Message ----------------------------------------------

  pb_battle_queue_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_battle_queue_t& from);
  void MergeFrom(const pb_battle_queue_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_queue_hero_t queue_hero = 1;
  inline int queue_hero_size() const;
  inline void clear_queue_hero();
  static const int kQueueHeroFieldNumber = 1;
  inline const ::commonproto::pb_queue_hero_t& queue_hero(int index) const;
  inline ::commonproto::pb_queue_hero_t* mutable_queue_hero(int index);
  inline ::commonproto::pb_queue_hero_t* add_queue_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_queue_hero_t >&
      queue_hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_queue_hero_t >*
      mutable_queue_hero();

  // required .commonproto.pb_queue_type_t queue_type = 2;
  inline bool has_queue_type() const;
  inline void clear_queue_type();
  static const int kQueueTypeFieldNumber = 2;
  inline ::commonproto::pb_queue_type_t queue_type() const;
  inline void set_queue_type(::commonproto::pb_queue_type_t value);

  // optional uint32 total_btl_val = 3;
  inline bool has_total_btl_val() const;
  inline void clear_total_btl_val();
  static const int kTotalBtlValFieldNumber = 3;
  inline ::google::protobuf::uint32 total_btl_val() const;
  inline void set_total_btl_val(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_battle_queue_t)
 private:
  inline void set_has_queue_type();
  inline void clear_has_queue_type();
  inline void set_has_total_btl_val();
  inline void clear_has_total_btl_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_queue_hero_t > queue_hero_;
  int queue_type_;
  ::google::protobuf::uint32 total_btl_val_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_battle_queue_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_battle_queue_list_t : public ::google::protobuf::Message {
 public:
  pb_battle_queue_list_t();
  virtual ~pb_battle_queue_list_t();

  pb_battle_queue_list_t(const pb_battle_queue_list_t& from);

  inline pb_battle_queue_list_t& operator=(const pb_battle_queue_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_battle_queue_list_t& default_instance();

  void Swap(pb_battle_queue_list_t* other);

  // implements Message ----------------------------------------------

  pb_battle_queue_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_battle_queue_list_t& from);
  void MergeFrom(const pb_battle_queue_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .commonproto.pb_battle_queue_t battle_queues = 1;
  inline bool has_battle_queues() const;
  inline void clear_battle_queues();
  static const int kBattleQueuesFieldNumber = 1;
  inline const ::commonproto::pb_battle_queue_t& battle_queues() const;
  inline ::commonproto::pb_battle_queue_t* mutable_battle_queues();
  inline ::commonproto::pb_battle_queue_t* release_battle_queues();
  inline void set_allocated_battle_queues(::commonproto::pb_battle_queue_t* battle_queues);

  // @@protoc_insertion_point(class_scope:commonproto.pb_battle_queue_list_t)
 private:
  inline void set_has_battle_queues();
  inline void clear_has_battle_queues();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::commonproto::pb_battle_queue_t* battle_queues_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_battle_queue_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_attr_t : public ::google::protobuf::Message {
 public:
  pb_attr_t();
  virtual ~pb_attr_t();

  pb_attr_t(const pb_attr_t& from);

  inline pb_attr_t& operator=(const pb_attr_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_attr_t& default_instance();

  void Swap(pb_attr_t* other);

  // implements Message ----------------------------------------------

  pb_attr_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_attr_t& from);
  void MergeFrom(const pb_attr_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_attr_t)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_attr_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_attr_list_t : public ::google::protobuf::Message {
 public:
  pb_attr_list_t();
  virtual ~pb_attr_list_t();

  pb_attr_list_t(const pb_attr_list_t& from);

  inline pb_attr_list_t& operator=(const pb_attr_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_attr_list_t& default_instance();

  void Swap(pb_attr_list_t* other);

  // implements Message ----------------------------------------------

  pb_attr_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_attr_list_t& from);
  void MergeFrom(const pb_attr_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_attr_t attrs = 1;
  inline int attrs_size() const;
  inline void clear_attrs();
  static const int kAttrsFieldNumber = 1;
  inline const ::commonproto::pb_attr_t& attrs(int index) const;
  inline ::commonproto::pb_attr_t* mutable_attrs(int index);
  inline ::commonproto::pb_attr_t* add_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_attr_t >&
      attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_attr_t >*
      mutable_attrs();

  // @@protoc_insertion_point(class_scope:commonproto.pb_attr_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_attr_t > attrs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_attr_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_item_t : public ::google::protobuf::Message {
 public:
  pb_item_t();
  virtual ~pb_item_t();

  pb_item_t(const pb_item_t& from);

  inline pb_item_t& operator=(const pb_item_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_item_t& default_instance();

  void Swap(pb_item_t* other);

  // implements Message ----------------------------------------------

  pb_item_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_item_t& from);
  void MergeFrom(const pb_item_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_item_t)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_item_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_level_prize_t : public ::google::protobuf::Message {
 public:
  pb_level_prize_t();
  virtual ~pb_level_prize_t();

  pb_level_prize_t(const pb_level_prize_t& from);

  inline pb_level_prize_t& operator=(const pb_level_prize_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_level_prize_t& default_instance();

  void Swap(pb_level_prize_t* other);

  // implements Message ----------------------------------------------

  pb_level_prize_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_level_prize_t& from);
  void MergeFrom(const pb_level_prize_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 gold = 1;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 1;
  inline ::google::protobuf::uint32 gold() const;
  inline void set_gold(::google::protobuf::uint32 value);

  // required .commonproto.pb_item_list_t item_list = 2;
  inline bool has_item_list() const;
  inline void clear_item_list();
  static const int kItemListFieldNumber = 2;
  inline const ::commonproto::pb_item_list_t& item_list() const;
  inline ::commonproto::pb_item_list_t* mutable_item_list();
  inline ::commonproto::pb_item_list_t* release_item_list();
  inline void set_allocated_item_list(::commonproto::pb_item_list_t* item_list);

  // required uint32 hero_exp = 3;
  inline bool has_hero_exp() const;
  inline void clear_hero_exp();
  static const int kHeroExpFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_exp() const;
  inline void set_hero_exp(::google::protobuf::uint32 value);

  // required uint32 player_exp = 4;
  inline bool has_player_exp() const;
  inline void clear_player_exp();
  static const int kPlayerExpFieldNumber = 4;
  inline ::google::protobuf::uint32 player_exp() const;
  inline void set_player_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_level_prize_t)
 private:
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_item_list();
  inline void clear_has_item_list();
  inline void set_has_hero_exp();
  inline void clear_has_hero_exp();
  inline void set_has_player_exp();
  inline void clear_has_player_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::commonproto::pb_item_list_t* item_list_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 hero_exp_;
  ::google::protobuf::uint32 player_exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_level_prize_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_item_list_t : public ::google::protobuf::Message {
 public:
  pb_item_list_t();
  virtual ~pb_item_list_t();

  pb_item_list_t(const pb_item_list_t& from);

  inline pb_item_list_t& operator=(const pb_item_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_item_list_t& default_instance();

  void Swap(pb_item_list_t* other);

  // implements Message ----------------------------------------------

  pb_item_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_item_list_t& from);
  void MergeFrom(const pb_item_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_item_t items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::commonproto::pb_item_t& items(int index) const;
  inline ::commonproto::pb_item_t* mutable_items(int index);
  inline ::commonproto::pb_item_t* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_item_t >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_item_t >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:commonproto.pb_item_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_item_t > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_item_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_level_prize_list_t : public ::google::protobuf::Message {
 public:
  pb_level_prize_list_t();
  virtual ~pb_level_prize_list_t();

  pb_level_prize_list_t(const pb_level_prize_list_t& from);

  inline pb_level_prize_list_t& operator=(const pb_level_prize_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_level_prize_list_t& default_instance();

  void Swap(pb_level_prize_list_t* other);

  // implements Message ----------------------------------------------

  pb_level_prize_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_level_prize_list_t& from);
  void MergeFrom(const pb_level_prize_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_level_prize_t level_prizes = 1;
  inline int level_prizes_size() const;
  inline void clear_level_prizes();
  static const int kLevelPrizesFieldNumber = 1;
  inline const ::commonproto::pb_level_prize_t& level_prizes(int index) const;
  inline ::commonproto::pb_level_prize_t* mutable_level_prizes(int index);
  inline ::commonproto::pb_level_prize_t* add_level_prizes();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_level_prize_t >&
      level_prizes() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_level_prize_t >*
      mutable_level_prizes();

  // @@protoc_insertion_point(class_scope:commonproto.pb_level_prize_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_level_prize_t > level_prizes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_level_prize_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_monster_t : public ::google::protobuf::Message {
 public:
  pb_monster_t();
  virtual ~pb_monster_t();

  pb_monster_t(const pb_monster_t& from);

  inline pb_monster_t& operator=(const pb_monster_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_monster_t& default_instance();

  void Swap(pb_monster_t* other);

  // implements Message ----------------------------------------------

  pb_monster_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_monster_t& from);
  void MergeFrom(const pb_monster_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:commonproto.pb_monster_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_monster_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_monster_list_t : public ::google::protobuf::Message {
 public:
  pb_monster_list_t();
  virtual ~pb_monster_list_t();

  pb_monster_list_t(const pb_monster_list_t& from);

  inline pb_monster_list_t& operator=(const pb_monster_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_monster_list_t& default_instance();

  void Swap(pb_monster_list_t* other);

  // implements Message ----------------------------------------------

  pb_monster_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_monster_list_t& from);
  void MergeFrom(const pb_monster_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_monster_t monsters = 1;
  inline int monsters_size() const;
  inline void clear_monsters();
  static const int kMonstersFieldNumber = 1;
  inline const ::commonproto::pb_monster_t& monsters(int index) const;
  inline ::commonproto::pb_monster_t* mutable_monsters(int index);
  inline ::commonproto::pb_monster_t* add_monsters();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_monster_t >&
      monsters() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_monster_t >*
      mutable_monsters();

  // @@protoc_insertion_point(class_scope:commonproto.pb_monster_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_monster_t > monsters_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_monster_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_rank50_self_t : public ::google::protobuf::Message {
 public:
  pb_rank50_self_t();
  virtual ~pb_rank50_self_t();

  pb_rank50_self_t(const pb_rank50_self_t& from);

  inline pb_rank50_self_t& operator=(const pb_rank50_self_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_rank50_self_t& default_instance();

  void Swap(pb_rank50_self_t* other);

  // implements Message ----------------------------------------------

  pb_rank50_self_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_rank50_self_t& from);
  void MergeFrom(const pb_rank50_self_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uid = 1;
  inline int uid_size() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid(int index) const;
  inline void set_uid(int index, ::google::protobuf::uint32 value);
  inline void add_uid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uid();

  // required uint32 self_rank = 2;
  inline bool has_self_rank() const;
  inline void clear_self_rank();
  static const int kSelfRankFieldNumber = 2;
  inline ::google::protobuf::uint32 self_rank() const;
  inline void set_self_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_rank50_self_t)
 private:
  inline void set_has_self_rank();
  inline void clear_has_self_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uid_;
  ::google::protobuf::uint32 self_rank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_rank50_self_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_task_t : public ::google::protobuf::Message {
 public:
  pb_task_t();
  virtual ~pb_task_t();

  pb_task_t(const pb_task_t& from);

  inline pb_task_t& operator=(const pb_task_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_task_t& default_instance();

  void Swap(pb_task_t* other);

  // implements Message ----------------------------------------------

  pb_task_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_task_t& from);
  void MergeFrom(const pb_task_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);

  // optional uint32 task_last_date = 2;
  inline bool has_task_last_date() const;
  inline void clear_task_last_date();
  static const int kTaskLastDateFieldNumber = 2;
  inline ::google::protobuf::uint32 task_last_date() const;
  inline void set_task_last_date(::google::protobuf::uint32 value);

  // optional uint32 bonus_accept = 3;
  inline bool has_bonus_accept() const;
  inline void clear_bonus_accept();
  static const int kBonusAcceptFieldNumber = 3;
  inline ::google::protobuf::uint32 bonus_accept() const;
  inline void set_bonus_accept(::google::protobuf::uint32 value);

  // optional uint32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_task_t)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_task_last_date();
  inline void clear_has_task_last_date();
  inline void set_has_bonus_accept();
  inline void clear_has_bonus_accept();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 task_last_date_;
  ::google::protobuf::uint32 bonus_accept_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_task_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_task_list_t : public ::google::protobuf::Message {
 public:
  pb_task_list_t();
  virtual ~pb_task_list_t();

  pb_task_list_t(const pb_task_list_t& from);

  inline pb_task_list_t& operator=(const pb_task_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_task_list_t& default_instance();

  void Swap(pb_task_list_t* other);

  // implements Message ----------------------------------------------

  pb_task_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_task_list_t& from);
  void MergeFrom(const pb_task_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_task_t tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::commonproto::pb_task_t& tasks(int index) const;
  inline ::commonproto::pb_task_t* mutable_tasks(int index);
  inline ::commonproto::pb_task_t* add_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_task_t >&
      tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_task_t >*
      mutable_tasks();

  // @@protoc_insertion_point(class_scope:commonproto.pb_task_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_task_t > tasks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_task_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_event_t : public ::google::protobuf::Message {
 public:
  pb_event_t();
  virtual ~pb_event_t();

  pb_event_t(const pb_event_t& from);

  inline pb_event_t& operator=(const pb_event_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_event_t& default_instance();

  void Swap(pb_event_t* other);

  // implements Message ----------------------------------------------

  pb_event_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_event_t& from);
  void MergeFrom(const pb_event_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // required .commonproto.pb_event_type_t type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::commonproto::pb_event_type_t type() const;
  inline void set_type(::commonproto::pb_event_type_t value);

  // required uint32 event_last_date = 3;
  inline bool has_event_last_date() const;
  inline void clear_event_last_date();
  static const int kEventLastDateFieldNumber = 3;
  inline ::google::protobuf::uint32 event_last_date() const;
  inline void set_event_last_date(::google::protobuf::uint32 value);

  // required uint32 bonus_accept = 4;
  inline bool has_bonus_accept() const;
  inline void clear_bonus_accept();
  static const int kBonusAcceptFieldNumber = 4;
  inline ::google::protobuf::uint32 bonus_accept() const;
  inline void set_bonus_accept(::google::protobuf::uint32 value);

  // required uint32 count = 5;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 5;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // required uint32 done = 6;
  inline bool has_done() const;
  inline void clear_done();
  static const int kDoneFieldNumber = 6;
  inline ::google::protobuf::uint32 done() const;
  inline void set_done(::google::protobuf::uint32 value);

  // optional .commonproto.pb_event_op_list_t op_val_list = 7;
  inline bool has_op_val_list() const;
  inline void clear_op_val_list();
  static const int kOpValListFieldNumber = 7;
  inline const ::commonproto::pb_event_op_list_t& op_val_list() const;
  inline ::commonproto::pb_event_op_list_t* mutable_op_val_list();
  inline ::commonproto::pb_event_op_list_t* release_op_val_list();
  inline void set_allocated_op_val_list(::commonproto::pb_event_op_list_t* op_val_list);

  // @@protoc_insertion_point(class_scope:commonproto.pb_event_t)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_event_last_date();
  inline void clear_has_event_last_date();
  inline void set_has_bonus_accept();
  inline void clear_has_bonus_accept();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_done();
  inline void clear_has_done();
  inline void set_has_op_val_list();
  inline void clear_has_op_val_list();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 event_id_;
  int type_;
  ::google::protobuf::uint32 event_last_date_;
  ::google::protobuf::uint32 bonus_accept_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 done_;
  ::commonproto::pb_event_op_list_t* op_val_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_event_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_event_list_t : public ::google::protobuf::Message {
 public:
  pb_event_list_t();
  virtual ~pb_event_list_t();

  pb_event_list_t(const pb_event_list_t& from);

  inline pb_event_list_t& operator=(const pb_event_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_event_list_t& default_instance();

  void Swap(pb_event_list_t* other);

  // implements Message ----------------------------------------------

  pb_event_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_event_list_t& from);
  void MergeFrom(const pb_event_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_event_t events = 1;
  inline int events_size() const;
  inline void clear_events();
  static const int kEventsFieldNumber = 1;
  inline const ::commonproto::pb_event_t& events(int index) const;
  inline ::commonproto::pb_event_t* mutable_events(int index);
  inline ::commonproto::pb_event_t* add_events();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_t >&
      events() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_t >*
      mutable_events();

  // @@protoc_insertion_point(class_scope:commonproto.pb_event_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_t > events_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_event_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_event_idc_t : public ::google::protobuf::Message {
 public:
  pb_event_idc_t();
  virtual ~pb_event_idc_t();

  pb_event_idc_t(const pb_event_idc_t& from);

  inline pb_event_idc_t& operator=(const pb_event_idc_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_event_idc_t& default_instance();

  void Swap(pb_event_idc_t* other);

  // implements Message ----------------------------------------------

  pb_event_idc_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_event_idc_t& from);
  void MergeFrom(const pb_event_idc_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::uint32 event_id() const;
  inline void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_event_idc_t)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_event_idc_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_event_idc_list_t : public ::google::protobuf::Message {
 public:
  pb_event_idc_list_t();
  virtual ~pb_event_idc_list_t();

  pb_event_idc_list_t(const pb_event_idc_list_t& from);

  inline pb_event_idc_list_t& operator=(const pb_event_idc_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_event_idc_list_t& default_instance();

  void Swap(pb_event_idc_list_t* other);

  // implements Message ----------------------------------------------

  pb_event_idc_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_event_idc_list_t& from);
  void MergeFrom(const pb_event_idc_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_event_idc_t ev_idcs_bouns_accept = 1;
  inline int ev_idcs_bouns_accept_size() const;
  inline void clear_ev_idcs_bouns_accept();
  static const int kEvIdcsBounsAcceptFieldNumber = 1;
  inline const ::commonproto::pb_event_idc_t& ev_idcs_bouns_accept(int index) const;
  inline ::commonproto::pb_event_idc_t* mutable_ev_idcs_bouns_accept(int index);
  inline ::commonproto::pb_event_idc_t* add_ev_idcs_bouns_accept();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_idc_t >&
      ev_idcs_bouns_accept() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_idc_t >*
      mutable_ev_idcs_bouns_accept();

  // repeated .commonproto.pb_event_idc_t ev_idcs_done = 2;
  inline int ev_idcs_done_size() const;
  inline void clear_ev_idcs_done();
  static const int kEvIdcsDoneFieldNumber = 2;
  inline const ::commonproto::pb_event_idc_t& ev_idcs_done(int index) const;
  inline ::commonproto::pb_event_idc_t* mutable_ev_idcs_done(int index);
  inline ::commonproto::pb_event_idc_t* add_ev_idcs_done();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_idc_t >&
      ev_idcs_done() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_idc_t >*
      mutable_ev_idcs_done();

  // @@protoc_insertion_point(class_scope:commonproto.pb_event_idc_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_idc_t > ev_idcs_bouns_accept_;
  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_idc_t > ev_idcs_done_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_event_idc_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_event_op_t : public ::google::protobuf::Message {
 public:
  pb_event_op_t();
  virtual ~pb_event_op_t();

  pb_event_op_t(const pb_event_op_t& from);

  inline pb_event_op_t& operator=(const pb_event_op_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_event_op_t& default_instance();

  void Swap(pb_event_op_t* other);

  // implements Message ----------------------------------------------

  pb_event_op_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_event_op_t& from);
  void MergeFrom(const pb_event_op_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // required uint32 val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline ::google::protobuf::uint32 val() const;
  inline void set_val(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_event_op_t)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 val_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_event_op_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_event_op_list_t : public ::google::protobuf::Message {
 public:
  pb_event_op_list_t();
  virtual ~pb_event_op_list_t();

  pb_event_op_list_t(const pb_event_op_list_t& from);

  inline pb_event_op_list_t& operator=(const pb_event_op_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_event_op_list_t& default_instance();

  void Swap(pb_event_op_list_t* other);

  // implements Message ----------------------------------------------

  pb_event_op_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_event_op_list_t& from);
  void MergeFrom(const pb_event_op_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_event_op_t event_op = 1;
  inline int event_op_size() const;
  inline void clear_event_op();
  static const int kEventOpFieldNumber = 1;
  inline const ::commonproto::pb_event_op_t& event_op(int index) const;
  inline ::commonproto::pb_event_op_t* mutable_event_op(int index);
  inline ::commonproto::pb_event_op_t* add_event_op();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_op_t >&
      event_op() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_op_t >*
      mutable_event_op();

  // @@protoc_insertion_point(class_scope:commonproto.pb_event_op_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_op_t > event_op_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_event_op_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_money_t : public ::google::protobuf::Message {
 public:
  pb_money_t();
  virtual ~pb_money_t();

  pb_money_t(const pb_money_t& from);

  inline pb_money_t& operator=(const pb_money_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_money_t& default_instance();

  void Swap(pb_money_t* other);

  // implements Message ----------------------------------------------

  pb_money_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_money_t& from);
  void MergeFrom(const pb_money_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .commonproto.pb_money_type_t type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::commonproto::pb_money_type_t type() const;
  inline void set_type(::commonproto::pb_money_type_t value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_money_t)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_money_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_attachment_t : public ::google::protobuf::Message {
 public:
  pb_attachment_t();
  virtual ~pb_attachment_t();

  pb_attachment_t(const pb_attachment_t& from);

  inline pb_attachment_t& operator=(const pb_attachment_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_attachment_t& default_instance();

  void Swap(pb_attachment_t* other);

  // implements Message ----------------------------------------------

  pb_attachment_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_attachment_t& from);
  void MergeFrom(const pb_attachment_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .commonproto.pb_item_list_t item_list = 1;
  inline bool has_item_list() const;
  inline void clear_item_list();
  static const int kItemListFieldNumber = 1;
  inline const ::commonproto::pb_item_list_t& item_list() const;
  inline ::commonproto::pb_item_list_t* mutable_item_list();
  inline ::commonproto::pb_item_list_t* release_item_list();
  inline void set_allocated_item_list(::commonproto::pb_item_list_t* item_list);

  // repeated .commonproto.pb_money_t moneys = 2;
  inline int moneys_size() const;
  inline void clear_moneys();
  static const int kMoneysFieldNumber = 2;
  inline const ::commonproto::pb_money_t& moneys(int index) const;
  inline ::commonproto::pb_money_t* mutable_moneys(int index);
  inline ::commonproto::pb_money_t* add_moneys();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_money_t >&
      moneys() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_money_t >*
      mutable_moneys();

  // @@protoc_insertion_point(class_scope:commonproto.pb_attachment_t)
 private:
  inline void set_has_item_list();
  inline void clear_has_item_list();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::commonproto::pb_item_list_t* item_list_;
  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_money_t > moneys_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_attachment_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_mail_t : public ::google::protobuf::Message {
 public:
  pb_mail_t();
  virtual ~pb_mail_t();

  pb_mail_t(const pb_mail_t& from);

  inline pb_mail_t& operator=(const pb_mail_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_mail_t& default_instance();

  void Swap(pb_mail_t* other);

  // implements Message ----------------------------------------------

  pb_mail_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_mail_t& from);
  void MergeFrom(const pb_mail_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mail_id = 1;
  inline bool has_mail_id() const;
  inline void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mail_id() const;
  inline void set_mail_id(::google::protobuf::uint32 value);

  // required string title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // required string sender = 3;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 3;
  inline const ::std::string& sender() const;
  inline void set_sender(const ::std::string& value);
  inline void set_sender(const char* value);
  inline void set_sender(const char* value, size_t size);
  inline ::std::string* mutable_sender();
  inline ::std::string* release_sender();
  inline void set_allocated_sender(::std::string* sender);

  // required string content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // required uint32 timestamp = 5;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // required uint32 read_mark = 6;
  inline bool has_read_mark() const;
  inline void clear_read_mark();
  static const int kReadMarkFieldNumber = 6;
  inline ::google::protobuf::uint32 read_mark() const;
  inline void set_read_mark(::google::protobuf::uint32 value);

  // optional .commonproto.pb_attachment_t attachment = 7;
  inline bool has_attachment() const;
  inline void clear_attachment();
  static const int kAttachmentFieldNumber = 7;
  inline const ::commonproto::pb_attachment_t& attachment() const;
  inline ::commonproto::pb_attachment_t* mutable_attachment();
  inline ::commonproto::pb_attachment_t* release_attachment();
  inline void set_allocated_attachment(::commonproto::pb_attachment_t* attachment);

  // @@protoc_insertion_point(class_scope:commonproto.pb_mail_t)
 private:
  inline void set_has_mail_id();
  inline void clear_has_mail_id();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_read_mark();
  inline void clear_has_read_mark();
  inline void set_has_attachment();
  inline void clear_has_attachment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* title_;
  ::std::string* sender_;
  ::google::protobuf::uint32 mail_id_;
  ::google::protobuf::uint32 timestamp_;
  ::std::string* content_;
  ::commonproto::pb_attachment_t* attachment_;
  ::google::protobuf::uint32 read_mark_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_mail_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_mail_list_t : public ::google::protobuf::Message {
 public:
  pb_mail_list_t();
  virtual ~pb_mail_list_t();

  pb_mail_list_t(const pb_mail_list_t& from);

  inline pb_mail_list_t& operator=(const pb_mail_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_mail_list_t& default_instance();

  void Swap(pb_mail_list_t* other);

  // implements Message ----------------------------------------------

  pb_mail_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_mail_list_t& from);
  void MergeFrom(const pb_mail_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_mail_t mails = 1;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 1;
  inline const ::commonproto::pb_mail_t& mails(int index) const;
  inline ::commonproto::pb_mail_t* mutable_mails(int index);
  inline ::commonproto::pb_mail_t* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_mail_t >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_mail_t >*
      mutable_mails();

  // @@protoc_insertion_point(class_scope:commonproto.pb_mail_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_mail_t > mails_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_mail_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_challenge_player_t : public ::google::protobuf::Message {
 public:
  pb_challenge_player_t();
  virtual ~pb_challenge_player_t();

  pb_challenge_player_t(const pb_challenge_player_t& from);

  inline pb_challenge_player_t& operator=(const pb_challenge_player_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_challenge_player_t& default_instance();

  void Swap(pb_challenge_player_t* other);

  // implements Message ----------------------------------------------

  pb_challenge_player_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_challenge_player_t& from);
  void MergeFrom(const pb_challenge_player_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required string nick = 2;
  inline bool has_nick() const;
  inline void clear_nick();
  static const int kNickFieldNumber = 2;
  inline const ::std::string& nick() const;
  inline void set_nick(const ::std::string& value);
  inline void set_nick(const char* value);
  inline void set_nick(const char* value, size_t size);
  inline ::std::string* mutable_nick();
  inline ::std::string* release_nick();
  inline void set_allocated_nick(::std::string* nick);

  // required uint32 lv = 3;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 3;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);

  // required uint32 btl_val = 4;
  inline bool has_btl_val() const;
  inline void clear_btl_val();
  static const int kBtlValFieldNumber = 4;
  inline ::google::protobuf::uint32 btl_val() const;
  inline void set_btl_val(::google::protobuf::uint32 value);

  // required uint32 win_count = 5;
  inline bool has_win_count() const;
  inline void clear_win_count();
  static const int kWinCountFieldNumber = 5;
  inline ::google::protobuf::uint32 win_count() const;
  inline void set_win_count(::google::protobuf::uint32 value);

  // required uint32 rank = 6;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 6;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // repeated .commonproto.pb_hero_t chal_hero = 7;
  inline int chal_hero_size() const;
  inline void clear_chal_hero();
  static const int kChalHeroFieldNumber = 7;
  inline const ::commonproto::pb_hero_t& chal_hero(int index) const;
  inline ::commonproto::pb_hero_t* mutable_chal_hero(int index);
  inline ::commonproto::pb_hero_t* add_chal_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_t >&
      chal_hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_t >*
      mutable_chal_hero();

  // @@protoc_insertion_point(class_scope:commonproto.pb_challenge_player_t)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_nick();
  inline void clear_has_nick();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_btl_val();
  inline void clear_has_btl_val();
  inline void set_has_win_count();
  inline void clear_has_win_count();
  inline void set_has_rank();
  inline void clear_has_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* nick_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 btl_val_;
  ::google::protobuf::uint32 win_count_;
  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_t > chal_hero_;
  ::google::protobuf::uint32 rank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_challenge_player_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_challenge_list_t : public ::google::protobuf::Message {
 public:
  pb_challenge_list_t();
  virtual ~pb_challenge_list_t();

  pb_challenge_list_t(const pb_challenge_list_t& from);

  inline pb_challenge_list_t& operator=(const pb_challenge_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_challenge_list_t& default_instance();

  void Swap(pb_challenge_list_t* other);

  // implements Message ----------------------------------------------

  pb_challenge_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_challenge_list_t& from);
  void MergeFrom(const pb_challenge_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_challenge_player_t challenge_player = 1;
  inline int challenge_player_size() const;
  inline void clear_challenge_player();
  static const int kChallengePlayerFieldNumber = 1;
  inline const ::commonproto::pb_challenge_player_t& challenge_player(int index) const;
  inline ::commonproto::pb_challenge_player_t* mutable_challenge_player(int index);
  inline ::commonproto::pb_challenge_player_t* add_challenge_player();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_challenge_player_t >&
      challenge_player() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_challenge_player_t >*
      mutable_challenge_player();

  // @@protoc_insertion_point(class_scope:commonproto.pb_challenge_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_challenge_player_t > challenge_player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_challenge_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_exped_opponent_t : public ::google::protobuf::Message {
 public:
  pb_exped_opponent_t();
  virtual ~pb_exped_opponent_t();

  pb_exped_opponent_t(const pb_exped_opponent_t& from);

  inline pb_exped_opponent_t& operator=(const pb_exped_opponent_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_exped_opponent_t& default_instance();

  void Swap(pb_exped_opponent_t* other);

  // implements Message ----------------------------------------------

  pb_exped_opponent_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_exped_opponent_t& from);
  void MergeFrom(const pb_exped_opponent_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .commonproto.pb_challenge_player_t chl_player = 1;
  inline bool has_chl_player() const;
  inline void clear_chl_player();
  static const int kChlPlayerFieldNumber = 1;
  inline const ::commonproto::pb_challenge_player_t& chl_player() const;
  inline ::commonproto::pb_challenge_player_t* mutable_chl_player();
  inline ::commonproto::pb_challenge_player_t* release_chl_player();
  inline void set_allocated_chl_player(::commonproto::pb_challenge_player_t* chl_player);

  // @@protoc_insertion_point(class_scope:commonproto.pb_exped_opponent_t)
 private:
  inline void set_has_chl_player();
  inline void clear_has_chl_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::commonproto::pb_challenge_player_t* chl_player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_exped_opponent_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_exped_opponent_list_t : public ::google::protobuf::Message {
 public:
  pb_exped_opponent_list_t();
  virtual ~pb_exped_opponent_list_t();

  pb_exped_opponent_list_t(const pb_exped_opponent_list_t& from);

  inline pb_exped_opponent_list_t& operator=(const pb_exped_opponent_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_exped_opponent_list_t& default_instance();

  void Swap(pb_exped_opponent_list_t* other);

  // implements Message ----------------------------------------------

  pb_exped_opponent_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_exped_opponent_list_t& from);
  void MergeFrom(const pb_exped_opponent_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_exped_opponent_t exped_opponents = 1;
  inline int exped_opponents_size() const;
  inline void clear_exped_opponents();
  static const int kExpedOpponentsFieldNumber = 1;
  inline const ::commonproto::pb_exped_opponent_t& exped_opponents(int index) const;
  inline ::commonproto::pb_exped_opponent_t* mutable_exped_opponents(int index);
  inline ::commonproto::pb_exped_opponent_t* add_exped_opponents();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_exped_opponent_t >&
      exped_opponents() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_exped_opponent_t >*
      mutable_exped_opponents();

  // @@protoc_insertion_point(class_scope:commonproto.pb_exped_opponent_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_exped_opponent_t > exped_opponents_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_exped_opponent_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_arena_history_entry_t : public ::google::protobuf::Message {
 public:
  pb_arena_history_entry_t();
  virtual ~pb_arena_history_entry_t();

  pb_arena_history_entry_t(const pb_arena_history_entry_t& from);

  inline pb_arena_history_entry_t& operator=(const pb_arena_history_entry_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_arena_history_entry_t& default_instance();

  void Swap(pb_arena_history_entry_t* other);

  // implements Message ----------------------------------------------

  pb_arena_history_entry_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_arena_history_entry_t& from);
  void MergeFrom(const pb_arena_history_entry_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .commonproto.pb_challenge_player_t challenge_player = 1;
  inline bool has_challenge_player() const;
  inline void clear_challenge_player();
  static const int kChallengePlayerFieldNumber = 1;
  inline const ::commonproto::pb_challenge_player_t& challenge_player() const;
  inline ::commonproto::pb_challenge_player_t* mutable_challenge_player();
  inline ::commonproto::pb_challenge_player_t* release_challenge_player();
  inline void set_allocated_challenge_player(::commonproto::pb_challenge_player_t* challenge_player);

  // required bool b_success = 2;
  inline bool has_b_success() const;
  inline void clear_b_success();
  static const int kBSuccessFieldNumber = 2;
  inline bool b_success() const;
  inline void set_b_success(bool value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_arena_history_entry_t)
 private:
  inline void set_has_challenge_player();
  inline void clear_has_challenge_player();
  inline void set_has_b_success();
  inline void clear_has_b_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::commonproto::pb_challenge_player_t* challenge_player_;
  bool b_success_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_arena_history_entry_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_exped_history_entry_t : public ::google::protobuf::Message {
 public:
  pb_exped_history_entry_t();
  virtual ~pb_exped_history_entry_t();

  pb_exped_history_entry_t(const pb_exped_history_entry_t& from);

  inline pb_exped_history_entry_t& operator=(const pb_exped_history_entry_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_exped_history_entry_t& default_instance();

  void Swap(pb_exped_history_entry_t* other);

  // implements Message ----------------------------------------------

  pb_exped_history_entry_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_exped_history_entry_t& from);
  void MergeFrom(const pb_exped_history_entry_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 oppon_uid = 1;
  inline bool has_oppon_uid() const;
  inline void clear_oppon_uid();
  static const int kOpponUidFieldNumber = 1;
  inline ::google::protobuf::uint32 oppon_uid() const;
  inline void set_oppon_uid(::google::protobuf::uint32 value);

  // required string oppon_nick = 2;
  inline bool has_oppon_nick() const;
  inline void clear_oppon_nick();
  static const int kOpponNickFieldNumber = 2;
  inline const ::std::string& oppon_nick() const;
  inline void set_oppon_nick(const ::std::string& value);
  inline void set_oppon_nick(const char* value);
  inline void set_oppon_nick(const char* value, size_t size);
  inline ::std::string* mutable_oppon_nick();
  inline ::std::string* release_oppon_nick();
  inline void set_allocated_oppon_nick(::std::string* oppon_nick);

  // @@protoc_insertion_point(class_scope:commonproto.pb_exped_history_entry_t)
 private:
  inline void set_has_oppon_uid();
  inline void clear_has_oppon_uid();
  inline void set_has_oppon_nick();
  inline void clear_has_oppon_nick();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* oppon_nick_;
  ::google::protobuf::uint32 oppon_uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_exped_history_entry_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_exped_survive_hero_t : public ::google::protobuf::Message {
 public:
  pb_exped_survive_hero_t();
  virtual ~pb_exped_survive_hero_t();

  pb_exped_survive_hero_t(const pb_exped_survive_hero_t& from);

  inline pb_exped_survive_hero_t& operator=(const pb_exped_survive_hero_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_exped_survive_hero_t& default_instance();

  void Swap(pb_exped_survive_hero_t* other);

  // implements Message ----------------------------------------------

  pb_exped_survive_hero_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_exped_survive_hero_t& from);
  void MergeFrom(const pb_exped_survive_hero_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 hero_id() const;
  inline void set_hero_id(::google::protobuf::uint32 value);

  // required uint32 hero_hp = 2;
  inline bool has_hero_hp() const;
  inline void clear_hero_hp();
  static const int kHeroHpFieldNumber = 2;
  inline ::google::protobuf::uint32 hero_hp() const;
  inline void set_hero_hp(::google::protobuf::uint32 value);

  // required uint32 hero_cd = 3;
  inline bool has_hero_cd() const;
  inline void clear_hero_cd();
  static const int kHeroCdFieldNumber = 3;
  inline ::google::protobuf::uint32 hero_cd() const;
  inline void set_hero_cd(::google::protobuf::uint32 value);

  // required bool b_dead = 4;
  inline bool has_b_dead() const;
  inline void clear_b_dead();
  static const int kBDeadFieldNumber = 4;
  inline bool b_dead() const;
  inline void set_b_dead(bool value);

  // @@protoc_insertion_point(class_scope:commonproto.pb_exped_survive_hero_t)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_hero_hp();
  inline void clear_has_hero_hp();
  inline void set_has_hero_cd();
  inline void clear_has_hero_cd();
  inline void set_has_b_dead();
  inline void clear_has_b_dead();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 hero_hp_;
  ::google::protobuf::uint32 hero_cd_;
  bool b_dead_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_exped_survive_hero_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_exped_survive_hero_list_t : public ::google::protobuf::Message {
 public:
  pb_exped_survive_hero_list_t();
  virtual ~pb_exped_survive_hero_list_t();

  pb_exped_survive_hero_list_t(const pb_exped_survive_hero_list_t& from);

  inline pb_exped_survive_hero_list_t& operator=(const pb_exped_survive_hero_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_exped_survive_hero_list_t& default_instance();

  void Swap(pb_exped_survive_hero_list_t* other);

  // implements Message ----------------------------------------------

  pb_exped_survive_hero_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_exped_survive_hero_list_t& from);
  void MergeFrom(const pb_exped_survive_hero_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_exped_survive_hero_t survive_hero = 1;
  inline int survive_hero_size() const;
  inline void clear_survive_hero();
  static const int kSurviveHeroFieldNumber = 1;
  inline const ::commonproto::pb_exped_survive_hero_t& survive_hero(int index) const;
  inline ::commonproto::pb_exped_survive_hero_t* mutable_survive_hero(int index);
  inline ::commonproto::pb_exped_survive_hero_t* add_survive_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_exped_survive_hero_t >&
      survive_hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_exped_survive_hero_t >*
      mutable_survive_hero();

  // @@protoc_insertion_point(class_scope:commonproto.pb_exped_survive_hero_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_exped_survive_hero_t > survive_hero_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_exped_survive_hero_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_rank_player_t : public ::google::protobuf::Message {
 public:
  pb_rank_player_t();
  virtual ~pb_rank_player_t();

  pb_rank_player_t(const pb_rank_player_t& from);

  inline pb_rank_player_t& operator=(const pb_rank_player_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_rank_player_t& default_instance();

  void Swap(pb_rank_player_t* other);

  // implements Message ----------------------------------------------

  pb_rank_player_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_rank_player_t& from);
  void MergeFrom(const pb_rank_player_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string nick = 1;
  inline bool has_nick() const;
  inline void clear_nick();
  static const int kNickFieldNumber = 1;
  inline const ::std::string& nick() const;
  inline void set_nick(const ::std::string& value);
  inline void set_nick(const char* value);
  inline void set_nick(const char* value, size_t size);
  inline ::std::string* mutable_nick();
  inline ::std::string* release_nick();
  inline void set_allocated_nick(::std::string* nick);

  // required uint32 stars = 2;
  inline bool has_stars() const;
  inline void clear_stars();
  static const int kStarsFieldNumber = 2;
  inline ::google::protobuf::uint32 stars() const;
  inline void set_stars(::google::protobuf::uint32 value);

  // optional string union_name = 3;
  inline bool has_union_name() const;
  inline void clear_union_name();
  static const int kUnionNameFieldNumber = 3;
  inline const ::std::string& union_name() const;
  inline void set_union_name(const ::std::string& value);
  inline void set_union_name(const char* value);
  inline void set_union_name(const char* value, size_t size);
  inline ::std::string* mutable_union_name();
  inline ::std::string* release_union_name();
  inline void set_allocated_union_name(::std::string* union_name);

  // @@protoc_insertion_point(class_scope:commonproto.pb_rank_player_t)
 private:
  inline void set_has_nick();
  inline void clear_has_nick();
  inline void set_has_stars();
  inline void clear_has_stars();
  inline void set_has_union_name();
  inline void clear_has_union_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* nick_;
  ::std::string* union_name_;
  ::google::protobuf::uint32 stars_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_rank_player_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_rank_player_list_t : public ::google::protobuf::Message {
 public:
  pb_rank_player_list_t();
  virtual ~pb_rank_player_list_t();

  pb_rank_player_list_t(const pb_rank_player_list_t& from);

  inline pb_rank_player_list_t& operator=(const pb_rank_player_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_rank_player_list_t& default_instance();

  void Swap(pb_rank_player_list_t* other);

  // implements Message ----------------------------------------------

  pb_rank_player_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_rank_player_list_t& from);
  void MergeFrom(const pb_rank_player_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .commonproto.pb_rank_player_t rank_players = 1;
  inline int rank_players_size() const;
  inline void clear_rank_players();
  static const int kRankPlayersFieldNumber = 1;
  inline const ::commonproto::pb_rank_player_t& rank_players(int index) const;
  inline ::commonproto::pb_rank_player_t* mutable_rank_players(int index);
  inline ::commonproto::pb_rank_player_t* add_rank_players();
  inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_rank_player_t >&
      rank_players() const;
  inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_rank_player_t >*
      mutable_rank_players();

  // @@protoc_insertion_point(class_scope:commonproto.pb_rank_player_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::commonproto::pb_rank_player_t > rank_players_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_rank_player_list_t* default_instance_;
};
// -------------------------------------------------------------------

class pb_enemies_rank_list_t : public ::google::protobuf::Message {
 public:
  pb_enemies_rank_list_t();
  virtual ~pb_enemies_rank_list_t();

  pb_enemies_rank_list_t(const pb_enemies_rank_list_t& from);

  inline pb_enemies_rank_list_t& operator=(const pb_enemies_rank_list_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pb_enemies_rank_list_t& default_instance();

  void Swap(pb_enemies_rank_list_t* other);

  // implements Message ----------------------------------------------

  pb_enemies_rank_list_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pb_enemies_rank_list_t& from);
  void MergeFrom(const pb_enemies_rank_list_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 enemies_ranks = 1;
  inline int enemies_ranks_size() const;
  inline void clear_enemies_ranks();
  static const int kEnemiesRanksFieldNumber = 1;
  inline ::google::protobuf::uint32 enemies_ranks(int index) const;
  inline void set_enemies_ranks(int index, ::google::protobuf::uint32 value);
  inline void add_enemies_ranks(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      enemies_ranks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_enemies_ranks();

  // @@protoc_insertion_point(class_scope:commonproto.pb_enemies_rank_list_t)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > enemies_ranks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static pb_enemies_rank_list_t* default_instance_;
};
// ===================================================================


// ===================================================================

// pb_level_id_t

// required uint32 chapter_id = 1;
inline bool pb_level_id_t::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_level_id_t::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_level_id_t::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_level_id_t::clear_chapter_id() {
  chapter_id_ = 0u;
  clear_has_chapter_id();
}
inline ::google::protobuf::uint32 pb_level_id_t::chapter_id() const {
  return chapter_id_;
}
inline void pb_level_id_t::set_chapter_id(::google::protobuf::uint32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// required uint32 section_id = 2;
inline bool pb_level_id_t::has_section_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_level_id_t::set_has_section_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_level_id_t::clear_has_section_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_level_id_t::clear_section_id() {
  section_id_ = 0u;
  clear_has_section_id();
}
inline ::google::protobuf::uint32 pb_level_id_t::section_id() const {
  return section_id_;
}
inline void pb_level_id_t::set_section_id(::google::protobuf::uint32 value) {
  set_has_section_id();
  section_id_ = value;
}

// -------------------------------------------------------------------

// pb_server_info_t

// required .commonproto.pb_server_type_t type = 1;
inline bool pb_server_info_t::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_server_info_t::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_server_info_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_server_info_t::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::commonproto::pb_server_type_t pb_server_info_t::type() const {
  return static_cast< ::commonproto::pb_server_type_t >(type_);
}
inline void pb_server_info_t::set_type(::commonproto::pb_server_type_t value) {
  assert(::commonproto::pb_server_type_t_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint32 svr_id = 2;
inline bool pb_server_info_t::has_svr_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_server_info_t::set_has_svr_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_server_info_t::clear_has_svr_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_server_info_t::clear_svr_id() {
  svr_id_ = 0u;
  clear_has_svr_id();
}
inline ::google::protobuf::uint32 pb_server_info_t::svr_id() const {
  return svr_id_;
}
inline void pb_server_info_t::set_svr_id(::google::protobuf::uint32 value) {
  set_has_svr_id();
  svr_id_ = value;
}

// required uint32 ip = 3;
inline bool pb_server_info_t::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_server_info_t::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_server_info_t::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_server_info_t::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 pb_server_info_t::ip() const {
  return ip_;
}
inline void pb_server_info_t::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
}

// required uint32 port = 4;
inline bool pb_server_info_t::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pb_server_info_t::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pb_server_info_t::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pb_server_info_t::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 pb_server_info_t::port() const {
  return port_;
}
inline void pb_server_info_t::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
}

// optional uint32 total_user_num = 5;
inline bool pb_server_info_t::has_total_user_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void pb_server_info_t::set_has_total_user_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void pb_server_info_t::clear_has_total_user_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void pb_server_info_t::clear_total_user_num() {
  total_user_num_ = 0u;
  clear_has_total_user_num();
}
inline ::google::protobuf::uint32 pb_server_info_t::total_user_num() const {
  return total_user_num_;
}
inline void pb_server_info_t::set_total_user_num(::google::protobuf::uint32 value) {
  set_has_total_user_num();
  total_user_num_ = value;
}

// -------------------------------------------------------------------

// pb_player_base_info_t

// required uint32 uid = 1;
inline bool pb_player_base_info_t::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_player_base_info_t::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_player_base_info_t::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_player_base_info_t::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 pb_player_base_info_t::uid() const {
  return uid_;
}
inline void pb_player_base_info_t::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional string nick = 2;
inline bool pb_player_base_info_t::has_nick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_player_base_info_t::set_has_nick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_player_base_info_t::clear_has_nick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_player_base_info_t::clear_nick() {
  if (nick_ != &::google::protobuf::internal::kEmptyString) {
    nick_->clear();
  }
  clear_has_nick();
}
inline const ::std::string& pb_player_base_info_t::nick() const {
  return *nick_;
}
inline void pb_player_base_info_t::set_nick(const ::std::string& value) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(value);
}
inline void pb_player_base_info_t::set_nick(const char* value) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(value);
}
inline void pb_player_base_info_t::set_nick(const char* value, size_t size) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* pb_player_base_info_t::mutable_nick() {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  return nick_;
}
inline ::std::string* pb_player_base_info_t::release_nick() {
  clear_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_;
    nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void pb_player_base_info_t::set_allocated_nick(::std::string* nick) {
  if (nick_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_;
  }
  if (nick) {
    set_has_nick();
    nick_ = nick;
  } else {
    clear_has_nick();
    nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// pb_level_state_t

// required uint32 chapter_id = 2;
inline bool pb_level_state_t::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_level_state_t::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_level_state_t::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_level_state_t::clear_chapter_id() {
  chapter_id_ = 0u;
  clear_has_chapter_id();
}
inline ::google::protobuf::uint32 pb_level_state_t::chapter_id() const {
  return chapter_id_;
}
inline void pb_level_state_t::set_chapter_id(::google::protobuf::uint32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// required uint32 section_id = 3;
inline bool pb_level_state_t::has_section_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_level_state_t::set_has_section_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_level_state_t::clear_has_section_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_level_state_t::clear_section_id() {
  section_id_ = 0u;
  clear_has_section_id();
}
inline ::google::protobuf::uint32 pb_level_state_t::section_id() const {
  return section_id_;
}
inline void pb_level_state_t::set_section_id(::google::protobuf::uint32 value) {
  set_has_section_id();
  section_id_ = value;
}

// required .commonproto.pb_level_star_t level_star = 4 [default = LEVEL_STAR_NONE];
inline bool pb_level_state_t::has_level_star() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_level_state_t::set_has_level_star() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_level_state_t::clear_has_level_star() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_level_state_t::clear_level_star() {
  level_star_ = 0;
  clear_has_level_star();
}
inline ::commonproto::pb_level_star_t pb_level_state_t::level_star() const {
  return static_cast< ::commonproto::pb_level_star_t >(level_star_);
}
inline void pb_level_state_t::set_level_star(::commonproto::pb_level_star_t value) {
  assert(::commonproto::pb_level_star_t_IsValid(value));
  set_has_level_star();
  level_star_ = value;
}

// optional uint32 daily_count = 5;
inline bool pb_level_state_t::has_daily_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pb_level_state_t::set_has_daily_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pb_level_state_t::clear_has_daily_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pb_level_state_t::clear_daily_count() {
  daily_count_ = 0u;
  clear_has_daily_count();
}
inline ::google::protobuf::uint32 pb_level_state_t::daily_count() const {
  return daily_count_;
}
inline void pb_level_state_t::set_daily_count(::google::protobuf::uint32 value) {
  set_has_daily_count();
  daily_count_ = value;
}

// optional uint32 count = 6;
inline bool pb_level_state_t::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void pb_level_state_t::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void pb_level_state_t::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void pb_level_state_t::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 pb_level_state_t::count() const {
  return count_;
}
inline void pb_level_state_t::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// optional uint32 daily_date = 7;
inline bool pb_level_state_t::has_daily_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void pb_level_state_t::set_has_daily_date() {
  _has_bits_[0] |= 0x00000020u;
}
inline void pb_level_state_t::clear_has_daily_date() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void pb_level_state_t::clear_daily_date() {
  daily_date_ = 0u;
  clear_has_daily_date();
}
inline ::google::protobuf::uint32 pb_level_state_t::daily_date() const {
  return daily_date_;
}
inline void pb_level_state_t::set_daily_date(::google::protobuf::uint32 value) {
  set_has_daily_date();
  daily_date_ = value;
}

// optional uint32 reset_count = 8;
inline bool pb_level_state_t::has_reset_count() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void pb_level_state_t::set_has_reset_count() {
  _has_bits_[0] |= 0x00000040u;
}
inline void pb_level_state_t::clear_has_reset_count() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void pb_level_state_t::clear_reset_count() {
  reset_count_ = 0u;
  clear_has_reset_count();
}
inline ::google::protobuf::uint32 pb_level_state_t::reset_count() const {
  return reset_count_;
}
inline void pb_level_state_t::set_reset_count(::google::protobuf::uint32 value) {
  set_has_reset_count();
  reset_count_ = value;
}

// -------------------------------------------------------------------

// pb_level_state_list_t

// repeated .commonproto.pb_level_state_t level_states = 1;
inline int pb_level_state_list_t::level_states_size() const {
  return level_states_.size();
}
inline void pb_level_state_list_t::clear_level_states() {
  level_states_.Clear();
}
inline const ::commonproto::pb_level_state_t& pb_level_state_list_t::level_states(int index) const {
  return level_states_.Get(index);
}
inline ::commonproto::pb_level_state_t* pb_level_state_list_t::mutable_level_states(int index) {
  return level_states_.Mutable(index);
}
inline ::commonproto::pb_level_state_t* pb_level_state_list_t::add_level_states() {
  return level_states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_level_state_t >&
pb_level_state_list_t::level_states() const {
  return level_states_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_level_state_t >*
pb_level_state_list_t::mutable_level_states() {
  return &level_states_;
}

// -------------------------------------------------------------------

// pb_mijing_t

// required uint32 chapter_id = 1;
inline bool pb_mijing_t::has_chapter_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_mijing_t::set_has_chapter_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_mijing_t::clear_has_chapter_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_mijing_t::clear_chapter_id() {
  chapter_id_ = 0u;
  clear_has_chapter_id();
}
inline ::google::protobuf::uint32 pb_mijing_t::chapter_id() const {
  return chapter_id_;
}
inline void pb_mijing_t::set_chapter_id(::google::protobuf::uint32 value) {
  set_has_chapter_id();
  chapter_id_ = value;
}

// optional uint32 daily_count = 3;
inline bool pb_mijing_t::has_daily_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_mijing_t::set_has_daily_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_mijing_t::clear_has_daily_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_mijing_t::clear_daily_count() {
  daily_count_ = 0u;
  clear_has_daily_count();
}
inline ::google::protobuf::uint32 pb_mijing_t::daily_count() const {
  return daily_count_;
}
inline void pb_mijing_t::set_daily_count(::google::protobuf::uint32 value) {
  set_has_daily_count();
  daily_count_ = value;
}

// optional uint32 daily_date = 5;
inline bool pb_mijing_t::has_daily_date() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_mijing_t::set_has_daily_date() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_mijing_t::clear_has_daily_date() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_mijing_t::clear_daily_date() {
  daily_date_ = 0u;
  clear_has_daily_date();
}
inline ::google::protobuf::uint32 pb_mijing_t::daily_date() const {
  return daily_date_;
}
inline void pb_mijing_t::set_daily_date(::google::protobuf::uint32 value) {
  set_has_daily_date();
  daily_date_ = value;
}

// -------------------------------------------------------------------

// pb_mijing_list_t

// repeated .commonproto.pb_mijing_t mijing = 1;
inline int pb_mijing_list_t::mijing_size() const {
  return mijing_.size();
}
inline void pb_mijing_list_t::clear_mijing() {
  mijing_.Clear();
}
inline const ::commonproto::pb_mijing_t& pb_mijing_list_t::mijing(int index) const {
  return mijing_.Get(index);
}
inline ::commonproto::pb_mijing_t* pb_mijing_list_t::mutable_mijing(int index) {
  return mijing_.Mutable(index);
}
inline ::commonproto::pb_mijing_t* pb_mijing_list_t::add_mijing() {
  return mijing_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_mijing_t >&
pb_mijing_list_t::mijing() const {
  return mijing_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_mijing_t >*
pb_mijing_list_t::mutable_mijing() {
  return &mijing_;
}

// -------------------------------------------------------------------

// pb_hero_equip_t

// required uint32 lv = 1 [default = 1];
inline bool pb_hero_equip_t::has_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_hero_equip_t::set_has_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_hero_equip_t::clear_has_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_hero_equip_t::clear_lv() {
  lv_ = 1u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 pb_hero_equip_t::lv() const {
  return lv_;
}
inline void pb_hero_equip_t::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// required uint32 exp = 2 [default = 0];
inline bool pb_hero_equip_t::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_hero_equip_t::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_hero_equip_t::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_hero_equip_t::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 pb_hero_equip_t::exp() const {
  return exp_;
}
inline void pb_hero_equip_t::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// pb_hero_attr_t

// required .commonproto.pb_hero_attr_type_t type = 1;
inline bool pb_hero_attr_t::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_hero_attr_t::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_hero_attr_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_hero_attr_t::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::commonproto::pb_hero_attr_type_t pb_hero_attr_t::type() const {
  return static_cast< ::commonproto::pb_hero_attr_type_t >(type_);
}
inline void pb_hero_attr_t::set_type(::commonproto::pb_hero_attr_type_t value) {
  assert(::commonproto::pb_hero_attr_type_t_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint32 value = 2;
inline bool pb_hero_attr_t::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_hero_attr_t::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_hero_attr_t::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_hero_attr_t::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 pb_hero_attr_t::value() const {
  return value_;
}
inline void pb_hero_attr_t::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// pb_hero_attr_list_t

// required uint32 hero_id = 1;
inline bool pb_hero_attr_list_t::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_hero_attr_list_t::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_hero_attr_list_t::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_hero_attr_list_t::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 pb_hero_attr_list_t::hero_id() const {
  return hero_id_;
}
inline void pb_hero_attr_list_t::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// repeated .commonproto.pb_hero_attr_t hero_attrs = 2;
inline int pb_hero_attr_list_t::hero_attrs_size() const {
  return hero_attrs_.size();
}
inline void pb_hero_attr_list_t::clear_hero_attrs() {
  hero_attrs_.Clear();
}
inline const ::commonproto::pb_hero_attr_t& pb_hero_attr_list_t::hero_attrs(int index) const {
  return hero_attrs_.Get(index);
}
inline ::commonproto::pb_hero_attr_t* pb_hero_attr_list_t::mutable_hero_attrs(int index) {
  return hero_attrs_.Mutable(index);
}
inline ::commonproto::pb_hero_attr_t* pb_hero_attr_list_t::add_hero_attrs() {
  return hero_attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_attr_t >&
pb_hero_attr_list_t::hero_attrs() const {
  return hero_attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_attr_t >*
pb_hero_attr_list_t::mutable_hero_attrs() {
  return &hero_attrs_;
}

// -------------------------------------------------------------------

// pb_skill_t

// required uint32 skill_lv = 1;
inline bool pb_skill_t::has_skill_lv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_skill_t::set_has_skill_lv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_skill_t::clear_has_skill_lv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_skill_t::clear_skill_lv() {
  skill_lv_ = 0u;
  clear_has_skill_lv();
}
inline ::google::protobuf::uint32 pb_skill_t::skill_lv() const {
  return skill_lv_;
}
inline void pb_skill_t::set_skill_lv(::google::protobuf::uint32 value) {
  set_has_skill_lv();
  skill_lv_ = value;
}

// required uint32 skill_rating = 2;
inline bool pb_skill_t::has_skill_rating() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_skill_t::set_has_skill_rating() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_skill_t::clear_has_skill_rating() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_skill_t::clear_skill_rating() {
  skill_rating_ = 0u;
  clear_has_skill_rating();
}
inline ::google::protobuf::uint32 pb_skill_t::skill_rating() const {
  return skill_rating_;
}
inline void pb_skill_t::set_skill_rating(::google::protobuf::uint32 value) {
  set_has_skill_rating();
  skill_rating_ = value;
}

// required .commonproto.pb_skill_type_t skill_index = 3;
inline bool pb_skill_t::has_skill_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_skill_t::set_has_skill_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_skill_t::clear_has_skill_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_skill_t::clear_skill_index() {
  skill_index_ = 1;
  clear_has_skill_index();
}
inline ::commonproto::pb_skill_type_t pb_skill_t::skill_index() const {
  return static_cast< ::commonproto::pb_skill_type_t >(skill_index_);
}
inline void pb_skill_t::set_skill_index(::commonproto::pb_skill_type_t value) {
  assert(::commonproto::pb_skill_type_t_IsValid(value));
  set_has_skill_index();
  skill_index_ = value;
}

// -------------------------------------------------------------------

// pb_skill_list_t

// repeated .commonproto.pb_skill_t skills = 1;
inline int pb_skill_list_t::skills_size() const {
  return skills_.size();
}
inline void pb_skill_list_t::clear_skills() {
  skills_.Clear();
}
inline const ::commonproto::pb_skill_t& pb_skill_list_t::skills(int index) const {
  return skills_.Get(index);
}
inline ::commonproto::pb_skill_t* pb_skill_list_t::mutable_skills(int index) {
  return skills_.Mutable(index);
}
inline ::commonproto::pb_skill_t* pb_skill_list_t::add_skills() {
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_skill_t >&
pb_skill_list_t::skills() const {
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_skill_t >*
pb_skill_list_t::mutable_skills() {
  return &skills_;
}

// -------------------------------------------------------------------

// pb_hero_t

// required uint32 hero_id = 1;
inline bool pb_hero_t::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_hero_t::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_hero_t::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_hero_t::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 pb_hero_t::hero_id() const {
  return hero_id_;
}
inline void pb_hero_t::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// required uint32 lv = 2;
inline bool pb_hero_t::has_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_hero_t::set_has_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_hero_t::clear_has_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_hero_t::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 pb_hero_t::lv() const {
  return lv_;
}
inline void pb_hero_t::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// required uint32 exp = 3;
inline bool pb_hero_t::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_hero_t::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_hero_t::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_hero_t::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 pb_hero_t::exp() const {
  return exp_;
}
inline void pb_hero_t::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
}

// required uint32 rating = 4;
inline bool pb_hero_t::has_rating() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pb_hero_t::set_has_rating() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pb_hero_t::clear_has_rating() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pb_hero_t::clear_rating() {
  rating_ = 0u;
  clear_has_rating();
}
inline ::google::protobuf::uint32 pb_hero_t::rating() const {
  return rating_;
}
inline void pb_hero_t::set_rating(::google::protobuf::uint32 value) {
  set_has_rating();
  rating_ = value;
}

// required uint32 star_rating = 5;
inline bool pb_hero_t::has_star_rating() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void pb_hero_t::set_has_star_rating() {
  _has_bits_[0] |= 0x00000010u;
}
inline void pb_hero_t::clear_has_star_rating() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void pb_hero_t::clear_star_rating() {
  star_rating_ = 0u;
  clear_has_star_rating();
}
inline ::google::protobuf::uint32 pb_hero_t::star_rating() const {
  return star_rating_;
}
inline void pb_hero_t::set_star_rating(::google::protobuf::uint32 value) {
  set_has_star_rating();
  star_rating_ = value;
}

// repeated .commonproto.pb_hero_equip_t hero_equips = 6;
inline int pb_hero_t::hero_equips_size() const {
  return hero_equips_.size();
}
inline void pb_hero_t::clear_hero_equips() {
  hero_equips_.Clear();
}
inline const ::commonproto::pb_hero_equip_t& pb_hero_t::hero_equips(int index) const {
  return hero_equips_.Get(index);
}
inline ::commonproto::pb_hero_equip_t* pb_hero_t::mutable_hero_equips(int index) {
  return hero_equips_.Mutable(index);
}
inline ::commonproto::pb_hero_equip_t* pb_hero_t::add_hero_equips() {
  return hero_equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_equip_t >&
pb_hero_t::hero_equips() const {
  return hero_equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_equip_t >*
pb_hero_t::mutable_hero_equips() {
  return &hero_equips_;
}

// repeated .commonproto.pb_skill_t skills = 9;
inline int pb_hero_t::skills_size() const {
  return skills_.size();
}
inline void pb_hero_t::clear_skills() {
  skills_.Clear();
}
inline const ::commonproto::pb_skill_t& pb_hero_t::skills(int index) const {
  return skills_.Get(index);
}
inline ::commonproto::pb_skill_t* pb_hero_t::mutable_skills(int index) {
  return skills_.Mutable(index);
}
inline ::commonproto::pb_skill_t* pb_hero_t::add_skills() {
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_skill_t >&
pb_hero_t::skills() const {
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_skill_t >*
pb_hero_t::mutable_skills() {
  return &skills_;
}

// optional uint32 cd = 10;
inline bool pb_hero_t::has_cd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void pb_hero_t::set_has_cd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void pb_hero_t::clear_has_cd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void pb_hero_t::clear_cd() {
  cd_ = 0u;
  clear_has_cd();
}
inline ::google::protobuf::uint32 pb_hero_t::cd() const {
  return cd_;
}
inline void pb_hero_t::set_cd(::google::protobuf::uint32 value) {
  set_has_cd();
  cd_ = value;
}

// optional uint32 hp = 11;
inline bool pb_hero_t::has_hp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void pb_hero_t::set_has_hp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void pb_hero_t::clear_has_hp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void pb_hero_t::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 pb_hero_t::hp() const {
  return hp_;
}
inline void pb_hero_t::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
}

// -------------------------------------------------------------------

// pb_hero_list_t

// repeated .commonproto.pb_hero_t heros = 1;
inline int pb_hero_list_t::heros_size() const {
  return heros_.size();
}
inline void pb_hero_list_t::clear_heros() {
  heros_.Clear();
}
inline const ::commonproto::pb_hero_t& pb_hero_list_t::heros(int index) const {
  return heros_.Get(index);
}
inline ::commonproto::pb_hero_t* pb_hero_list_t::mutable_heros(int index) {
  return heros_.Mutable(index);
}
inline ::commonproto::pb_hero_t* pb_hero_list_t::add_heros() {
  return heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_t >&
pb_hero_list_t::heros() const {
  return heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_t >*
pb_hero_list_t::mutable_heros() {
  return &heros_;
}

// -------------------------------------------------------------------

// pb_queue_hero_t

// required uint32 hero_pos = 1;
inline bool pb_queue_hero_t::has_hero_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_queue_hero_t::set_has_hero_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_queue_hero_t::clear_has_hero_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_queue_hero_t::clear_hero_pos() {
  hero_pos_ = 0u;
  clear_has_hero_pos();
}
inline ::google::protobuf::uint32 pb_queue_hero_t::hero_pos() const {
  return hero_pos_;
}
inline void pb_queue_hero_t::set_hero_pos(::google::protobuf::uint32 value) {
  set_has_hero_pos();
  hero_pos_ = value;
}

// required uint32 hero_id = 2;
inline bool pb_queue_hero_t::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_queue_hero_t::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_queue_hero_t::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_queue_hero_t::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 pb_queue_hero_t::hero_id() const {
  return hero_id_;
}
inline void pb_queue_hero_t::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// optional uint32 star_rating = 3;
inline bool pb_queue_hero_t::has_star_rating() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_queue_hero_t::set_has_star_rating() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_queue_hero_t::clear_has_star_rating() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_queue_hero_t::clear_star_rating() {
  star_rating_ = 0u;
  clear_has_star_rating();
}
inline ::google::protobuf::uint32 pb_queue_hero_t::star_rating() const {
  return star_rating_;
}
inline void pb_queue_hero_t::set_star_rating(::google::protobuf::uint32 value) {
  set_has_star_rating();
  star_rating_ = value;
}

// optional uint32 rating = 4;
inline bool pb_queue_hero_t::has_rating() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pb_queue_hero_t::set_has_rating() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pb_queue_hero_t::clear_has_rating() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pb_queue_hero_t::clear_rating() {
  rating_ = 0u;
  clear_has_rating();
}
inline ::google::protobuf::uint32 pb_queue_hero_t::rating() const {
  return rating_;
}
inline void pb_queue_hero_t::set_rating(::google::protobuf::uint32 value) {
  set_has_rating();
  rating_ = value;
}

// optional uint32 btl_val = 5;
inline bool pb_queue_hero_t::has_btl_val() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void pb_queue_hero_t::set_has_btl_val() {
  _has_bits_[0] |= 0x00000010u;
}
inline void pb_queue_hero_t::clear_has_btl_val() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void pb_queue_hero_t::clear_btl_val() {
  btl_val_ = 0u;
  clear_has_btl_val();
}
inline ::google::protobuf::uint32 pb_queue_hero_t::btl_val() const {
  return btl_val_;
}
inline void pb_queue_hero_t::set_btl_val(::google::protobuf::uint32 value) {
  set_has_btl_val();
  btl_val_ = value;
}

// -------------------------------------------------------------------

// pb_battle_queue_t

// repeated .commonproto.pb_queue_hero_t queue_hero = 1;
inline int pb_battle_queue_t::queue_hero_size() const {
  return queue_hero_.size();
}
inline void pb_battle_queue_t::clear_queue_hero() {
  queue_hero_.Clear();
}
inline const ::commonproto::pb_queue_hero_t& pb_battle_queue_t::queue_hero(int index) const {
  return queue_hero_.Get(index);
}
inline ::commonproto::pb_queue_hero_t* pb_battle_queue_t::mutable_queue_hero(int index) {
  return queue_hero_.Mutable(index);
}
inline ::commonproto::pb_queue_hero_t* pb_battle_queue_t::add_queue_hero() {
  return queue_hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_queue_hero_t >&
pb_battle_queue_t::queue_hero() const {
  return queue_hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_queue_hero_t >*
pb_battle_queue_t::mutable_queue_hero() {
  return &queue_hero_;
}

// required .commonproto.pb_queue_type_t queue_type = 2;
inline bool pb_battle_queue_t::has_queue_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_battle_queue_t::set_has_queue_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_battle_queue_t::clear_has_queue_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_battle_queue_t::clear_queue_type() {
  queue_type_ = 0;
  clear_has_queue_type();
}
inline ::commonproto::pb_queue_type_t pb_battle_queue_t::queue_type() const {
  return static_cast< ::commonproto::pb_queue_type_t >(queue_type_);
}
inline void pb_battle_queue_t::set_queue_type(::commonproto::pb_queue_type_t value) {
  assert(::commonproto::pb_queue_type_t_IsValid(value));
  set_has_queue_type();
  queue_type_ = value;
}

// optional uint32 total_btl_val = 3;
inline bool pb_battle_queue_t::has_total_btl_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_battle_queue_t::set_has_total_btl_val() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_battle_queue_t::clear_has_total_btl_val() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_battle_queue_t::clear_total_btl_val() {
  total_btl_val_ = 0u;
  clear_has_total_btl_val();
}
inline ::google::protobuf::uint32 pb_battle_queue_t::total_btl_val() const {
  return total_btl_val_;
}
inline void pb_battle_queue_t::set_total_btl_val(::google::protobuf::uint32 value) {
  set_has_total_btl_val();
  total_btl_val_ = value;
}

// -------------------------------------------------------------------

// pb_battle_queue_list_t

// required .commonproto.pb_battle_queue_t battle_queues = 1;
inline bool pb_battle_queue_list_t::has_battle_queues() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_battle_queue_list_t::set_has_battle_queues() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_battle_queue_list_t::clear_has_battle_queues() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_battle_queue_list_t::clear_battle_queues() {
  if (battle_queues_ != NULL) battle_queues_->::commonproto::pb_battle_queue_t::Clear();
  clear_has_battle_queues();
}
inline const ::commonproto::pb_battle_queue_t& pb_battle_queue_list_t::battle_queues() const {
  return battle_queues_ != NULL ? *battle_queues_ : *default_instance_->battle_queues_;
}
inline ::commonproto::pb_battle_queue_t* pb_battle_queue_list_t::mutable_battle_queues() {
  set_has_battle_queues();
  if (battle_queues_ == NULL) battle_queues_ = new ::commonproto::pb_battle_queue_t;
  return battle_queues_;
}
inline ::commonproto::pb_battle_queue_t* pb_battle_queue_list_t::release_battle_queues() {
  clear_has_battle_queues();
  ::commonproto::pb_battle_queue_t* temp = battle_queues_;
  battle_queues_ = NULL;
  return temp;
}
inline void pb_battle_queue_list_t::set_allocated_battle_queues(::commonproto::pb_battle_queue_t* battle_queues) {
  delete battle_queues_;
  battle_queues_ = battle_queues;
  if (battle_queues) {
    set_has_battle_queues();
  } else {
    clear_has_battle_queues();
  }
}

// -------------------------------------------------------------------

// pb_attr_t

// required uint32 type = 1;
inline bool pb_attr_t::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_attr_t::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_attr_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_attr_t::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 pb_attr_t::type() const {
  return type_;
}
inline void pb_attr_t::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 value = 2;
inline bool pb_attr_t::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_attr_t::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_attr_t::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_attr_t::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 pb_attr_t::value() const {
  return value_;
}
inline void pb_attr_t::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// pb_attr_list_t

// repeated .commonproto.pb_attr_t attrs = 1;
inline int pb_attr_list_t::attrs_size() const {
  return attrs_.size();
}
inline void pb_attr_list_t::clear_attrs() {
  attrs_.Clear();
}
inline const ::commonproto::pb_attr_t& pb_attr_list_t::attrs(int index) const {
  return attrs_.Get(index);
}
inline ::commonproto::pb_attr_t* pb_attr_list_t::mutable_attrs(int index) {
  return attrs_.Mutable(index);
}
inline ::commonproto::pb_attr_t* pb_attr_list_t::add_attrs() {
  return attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_attr_t >&
pb_attr_list_t::attrs() const {
  return attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_attr_t >*
pb_attr_list_t::mutable_attrs() {
  return &attrs_;
}

// -------------------------------------------------------------------

// pb_item_t

// required uint32 item_id = 1;
inline bool pb_item_t::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_item_t::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_item_t::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_item_t::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 pb_item_t::item_id() const {
  return item_id_;
}
inline void pb_item_t::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 count = 2;
inline bool pb_item_t::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_item_t::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_item_t::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_item_t::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 pb_item_t::count() const {
  return count_;
}
inline void pb_item_t::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// pb_level_prize_t

// required uint32 gold = 1;
inline bool pb_level_prize_t::has_gold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_level_prize_t::set_has_gold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_level_prize_t::clear_has_gold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_level_prize_t::clear_gold() {
  gold_ = 0u;
  clear_has_gold();
}
inline ::google::protobuf::uint32 pb_level_prize_t::gold() const {
  return gold_;
}
inline void pb_level_prize_t::set_gold(::google::protobuf::uint32 value) {
  set_has_gold();
  gold_ = value;
}

// required .commonproto.pb_item_list_t item_list = 2;
inline bool pb_level_prize_t::has_item_list() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_level_prize_t::set_has_item_list() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_level_prize_t::clear_has_item_list() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_level_prize_t::clear_item_list() {
  if (item_list_ != NULL) item_list_->::commonproto::pb_item_list_t::Clear();
  clear_has_item_list();
}
inline const ::commonproto::pb_item_list_t& pb_level_prize_t::item_list() const {
  return item_list_ != NULL ? *item_list_ : *default_instance_->item_list_;
}
inline ::commonproto::pb_item_list_t* pb_level_prize_t::mutable_item_list() {
  set_has_item_list();
  if (item_list_ == NULL) item_list_ = new ::commonproto::pb_item_list_t;
  return item_list_;
}
inline ::commonproto::pb_item_list_t* pb_level_prize_t::release_item_list() {
  clear_has_item_list();
  ::commonproto::pb_item_list_t* temp = item_list_;
  item_list_ = NULL;
  return temp;
}
inline void pb_level_prize_t::set_allocated_item_list(::commonproto::pb_item_list_t* item_list) {
  delete item_list_;
  item_list_ = item_list;
  if (item_list) {
    set_has_item_list();
  } else {
    clear_has_item_list();
  }
}

// required uint32 hero_exp = 3;
inline bool pb_level_prize_t::has_hero_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_level_prize_t::set_has_hero_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_level_prize_t::clear_has_hero_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_level_prize_t::clear_hero_exp() {
  hero_exp_ = 0u;
  clear_has_hero_exp();
}
inline ::google::protobuf::uint32 pb_level_prize_t::hero_exp() const {
  return hero_exp_;
}
inline void pb_level_prize_t::set_hero_exp(::google::protobuf::uint32 value) {
  set_has_hero_exp();
  hero_exp_ = value;
}

// required uint32 player_exp = 4;
inline bool pb_level_prize_t::has_player_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pb_level_prize_t::set_has_player_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pb_level_prize_t::clear_has_player_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pb_level_prize_t::clear_player_exp() {
  player_exp_ = 0u;
  clear_has_player_exp();
}
inline ::google::protobuf::uint32 pb_level_prize_t::player_exp() const {
  return player_exp_;
}
inline void pb_level_prize_t::set_player_exp(::google::protobuf::uint32 value) {
  set_has_player_exp();
  player_exp_ = value;
}

// -------------------------------------------------------------------

// pb_item_list_t

// repeated .commonproto.pb_item_t items = 1;
inline int pb_item_list_t::items_size() const {
  return items_.size();
}
inline void pb_item_list_t::clear_items() {
  items_.Clear();
}
inline const ::commonproto::pb_item_t& pb_item_list_t::items(int index) const {
  return items_.Get(index);
}
inline ::commonproto::pb_item_t* pb_item_list_t::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::commonproto::pb_item_t* pb_item_list_t::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_item_t >&
pb_item_list_t::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_item_t >*
pb_item_list_t::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// pb_level_prize_list_t

// repeated .commonproto.pb_level_prize_t level_prizes = 1;
inline int pb_level_prize_list_t::level_prizes_size() const {
  return level_prizes_.size();
}
inline void pb_level_prize_list_t::clear_level_prizes() {
  level_prizes_.Clear();
}
inline const ::commonproto::pb_level_prize_t& pb_level_prize_list_t::level_prizes(int index) const {
  return level_prizes_.Get(index);
}
inline ::commonproto::pb_level_prize_t* pb_level_prize_list_t::mutable_level_prizes(int index) {
  return level_prizes_.Mutable(index);
}
inline ::commonproto::pb_level_prize_t* pb_level_prize_list_t::add_level_prizes() {
  return level_prizes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_level_prize_t >&
pb_level_prize_list_t::level_prizes() const {
  return level_prizes_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_level_prize_t >*
pb_level_prize_list_t::mutable_level_prizes() {
  return &level_prizes_;
}

// -------------------------------------------------------------------

// pb_monster_t

// -------------------------------------------------------------------

// pb_monster_list_t

// repeated .commonproto.pb_monster_t monsters = 1;
inline int pb_monster_list_t::monsters_size() const {
  return monsters_.size();
}
inline void pb_monster_list_t::clear_monsters() {
  monsters_.Clear();
}
inline const ::commonproto::pb_monster_t& pb_monster_list_t::monsters(int index) const {
  return monsters_.Get(index);
}
inline ::commonproto::pb_monster_t* pb_monster_list_t::mutable_monsters(int index) {
  return monsters_.Mutable(index);
}
inline ::commonproto::pb_monster_t* pb_monster_list_t::add_monsters() {
  return monsters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_monster_t >&
pb_monster_list_t::monsters() const {
  return monsters_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_monster_t >*
pb_monster_list_t::mutable_monsters() {
  return &monsters_;
}

// -------------------------------------------------------------------

// pb_rank50_self_t

// repeated uint32 uid = 1;
inline int pb_rank50_self_t::uid_size() const {
  return uid_.size();
}
inline void pb_rank50_self_t::clear_uid() {
  uid_.Clear();
}
inline ::google::protobuf::uint32 pb_rank50_self_t::uid(int index) const {
  return uid_.Get(index);
}
inline void pb_rank50_self_t::set_uid(int index, ::google::protobuf::uint32 value) {
  uid_.Set(index, value);
}
inline void pb_rank50_self_t::add_uid(::google::protobuf::uint32 value) {
  uid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
pb_rank50_self_t::uid() const {
  return uid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
pb_rank50_self_t::mutable_uid() {
  return &uid_;
}

// required uint32 self_rank = 2;
inline bool pb_rank50_self_t::has_self_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_rank50_self_t::set_has_self_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_rank50_self_t::clear_has_self_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_rank50_self_t::clear_self_rank() {
  self_rank_ = 0u;
  clear_has_self_rank();
}
inline ::google::protobuf::uint32 pb_rank50_self_t::self_rank() const {
  return self_rank_;
}
inline void pb_rank50_self_t::set_self_rank(::google::protobuf::uint32 value) {
  set_has_self_rank();
  self_rank_ = value;
}

// -------------------------------------------------------------------

// pb_task_t

// required uint32 task_id = 1;
inline bool pb_task_t::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_task_t::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_task_t::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_task_t::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 pb_task_t::task_id() const {
  return task_id_;
}
inline void pb_task_t::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// optional uint32 task_last_date = 2;
inline bool pb_task_t::has_task_last_date() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_task_t::set_has_task_last_date() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_task_t::clear_has_task_last_date() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_task_t::clear_task_last_date() {
  task_last_date_ = 0u;
  clear_has_task_last_date();
}
inline ::google::protobuf::uint32 pb_task_t::task_last_date() const {
  return task_last_date_;
}
inline void pb_task_t::set_task_last_date(::google::protobuf::uint32 value) {
  set_has_task_last_date();
  task_last_date_ = value;
}

// optional uint32 bonus_accept = 3;
inline bool pb_task_t::has_bonus_accept() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_task_t::set_has_bonus_accept() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_task_t::clear_has_bonus_accept() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_task_t::clear_bonus_accept() {
  bonus_accept_ = 0u;
  clear_has_bonus_accept();
}
inline ::google::protobuf::uint32 pb_task_t::bonus_accept() const {
  return bonus_accept_;
}
inline void pb_task_t::set_bonus_accept(::google::protobuf::uint32 value) {
  set_has_bonus_accept();
  bonus_accept_ = value;
}

// optional uint32 count = 4;
inline bool pb_task_t::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pb_task_t::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pb_task_t::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pb_task_t::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 pb_task_t::count() const {
  return count_;
}
inline void pb_task_t::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// pb_task_list_t

// repeated .commonproto.pb_task_t tasks = 1;
inline int pb_task_list_t::tasks_size() const {
  return tasks_.size();
}
inline void pb_task_list_t::clear_tasks() {
  tasks_.Clear();
}
inline const ::commonproto::pb_task_t& pb_task_list_t::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::commonproto::pb_task_t* pb_task_list_t::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::commonproto::pb_task_t* pb_task_list_t::add_tasks() {
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_task_t >&
pb_task_list_t::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_task_t >*
pb_task_list_t::mutable_tasks() {
  return &tasks_;
}

// -------------------------------------------------------------------

// pb_event_t

// required uint32 event_id = 1;
inline bool pb_event_t::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_event_t::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_event_t::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_event_t::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 pb_event_t::event_id() const {
  return event_id_;
}
inline void pb_event_t::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
}

// required .commonproto.pb_event_type_t type = 2;
inline bool pb_event_t::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_event_t::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_event_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_event_t::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::commonproto::pb_event_type_t pb_event_t::type() const {
  return static_cast< ::commonproto::pb_event_type_t >(type_);
}
inline void pb_event_t::set_type(::commonproto::pb_event_type_t value) {
  assert(::commonproto::pb_event_type_t_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint32 event_last_date = 3;
inline bool pb_event_t::has_event_last_date() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_event_t::set_has_event_last_date() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_event_t::clear_has_event_last_date() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_event_t::clear_event_last_date() {
  event_last_date_ = 0u;
  clear_has_event_last_date();
}
inline ::google::protobuf::uint32 pb_event_t::event_last_date() const {
  return event_last_date_;
}
inline void pb_event_t::set_event_last_date(::google::protobuf::uint32 value) {
  set_has_event_last_date();
  event_last_date_ = value;
}

// required uint32 bonus_accept = 4;
inline bool pb_event_t::has_bonus_accept() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pb_event_t::set_has_bonus_accept() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pb_event_t::clear_has_bonus_accept() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pb_event_t::clear_bonus_accept() {
  bonus_accept_ = 0u;
  clear_has_bonus_accept();
}
inline ::google::protobuf::uint32 pb_event_t::bonus_accept() const {
  return bonus_accept_;
}
inline void pb_event_t::set_bonus_accept(::google::protobuf::uint32 value) {
  set_has_bonus_accept();
  bonus_accept_ = value;
}

// required uint32 count = 5;
inline bool pb_event_t::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void pb_event_t::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void pb_event_t::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void pb_event_t::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 pb_event_t::count() const {
  return count_;
}
inline void pb_event_t::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// required uint32 done = 6;
inline bool pb_event_t::has_done() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void pb_event_t::set_has_done() {
  _has_bits_[0] |= 0x00000020u;
}
inline void pb_event_t::clear_has_done() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void pb_event_t::clear_done() {
  done_ = 0u;
  clear_has_done();
}
inline ::google::protobuf::uint32 pb_event_t::done() const {
  return done_;
}
inline void pb_event_t::set_done(::google::protobuf::uint32 value) {
  set_has_done();
  done_ = value;
}

// optional .commonproto.pb_event_op_list_t op_val_list = 7;
inline bool pb_event_t::has_op_val_list() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void pb_event_t::set_has_op_val_list() {
  _has_bits_[0] |= 0x00000040u;
}
inline void pb_event_t::clear_has_op_val_list() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void pb_event_t::clear_op_val_list() {
  if (op_val_list_ != NULL) op_val_list_->::commonproto::pb_event_op_list_t::Clear();
  clear_has_op_val_list();
}
inline const ::commonproto::pb_event_op_list_t& pb_event_t::op_val_list() const {
  return op_val_list_ != NULL ? *op_val_list_ : *default_instance_->op_val_list_;
}
inline ::commonproto::pb_event_op_list_t* pb_event_t::mutable_op_val_list() {
  set_has_op_val_list();
  if (op_val_list_ == NULL) op_val_list_ = new ::commonproto::pb_event_op_list_t;
  return op_val_list_;
}
inline ::commonproto::pb_event_op_list_t* pb_event_t::release_op_val_list() {
  clear_has_op_val_list();
  ::commonproto::pb_event_op_list_t* temp = op_val_list_;
  op_val_list_ = NULL;
  return temp;
}
inline void pb_event_t::set_allocated_op_val_list(::commonproto::pb_event_op_list_t* op_val_list) {
  delete op_val_list_;
  op_val_list_ = op_val_list;
  if (op_val_list) {
    set_has_op_val_list();
  } else {
    clear_has_op_val_list();
  }
}

// -------------------------------------------------------------------

// pb_event_list_t

// repeated .commonproto.pb_event_t events = 1;
inline int pb_event_list_t::events_size() const {
  return events_.size();
}
inline void pb_event_list_t::clear_events() {
  events_.Clear();
}
inline const ::commonproto::pb_event_t& pb_event_list_t::events(int index) const {
  return events_.Get(index);
}
inline ::commonproto::pb_event_t* pb_event_list_t::mutable_events(int index) {
  return events_.Mutable(index);
}
inline ::commonproto::pb_event_t* pb_event_list_t::add_events() {
  return events_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_t >&
pb_event_list_t::events() const {
  return events_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_t >*
pb_event_list_t::mutable_events() {
  return &events_;
}

// -------------------------------------------------------------------

// pb_event_idc_t

// required uint32 event_id = 1;
inline bool pb_event_idc_t::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_event_idc_t::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_event_idc_t::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_event_idc_t::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 pb_event_idc_t::event_id() const {
  return event_id_;
}
inline void pb_event_idc_t::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
}

// optional uint32 count = 2;
inline bool pb_event_idc_t::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_event_idc_t::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_event_idc_t::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_event_idc_t::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 pb_event_idc_t::count() const {
  return count_;
}
inline void pb_event_idc_t::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// pb_event_idc_list_t

// repeated .commonproto.pb_event_idc_t ev_idcs_bouns_accept = 1;
inline int pb_event_idc_list_t::ev_idcs_bouns_accept_size() const {
  return ev_idcs_bouns_accept_.size();
}
inline void pb_event_idc_list_t::clear_ev_idcs_bouns_accept() {
  ev_idcs_bouns_accept_.Clear();
}
inline const ::commonproto::pb_event_idc_t& pb_event_idc_list_t::ev_idcs_bouns_accept(int index) const {
  return ev_idcs_bouns_accept_.Get(index);
}
inline ::commonproto::pb_event_idc_t* pb_event_idc_list_t::mutable_ev_idcs_bouns_accept(int index) {
  return ev_idcs_bouns_accept_.Mutable(index);
}
inline ::commonproto::pb_event_idc_t* pb_event_idc_list_t::add_ev_idcs_bouns_accept() {
  return ev_idcs_bouns_accept_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_idc_t >&
pb_event_idc_list_t::ev_idcs_bouns_accept() const {
  return ev_idcs_bouns_accept_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_idc_t >*
pb_event_idc_list_t::mutable_ev_idcs_bouns_accept() {
  return &ev_idcs_bouns_accept_;
}

// repeated .commonproto.pb_event_idc_t ev_idcs_done = 2;
inline int pb_event_idc_list_t::ev_idcs_done_size() const {
  return ev_idcs_done_.size();
}
inline void pb_event_idc_list_t::clear_ev_idcs_done() {
  ev_idcs_done_.Clear();
}
inline const ::commonproto::pb_event_idc_t& pb_event_idc_list_t::ev_idcs_done(int index) const {
  return ev_idcs_done_.Get(index);
}
inline ::commonproto::pb_event_idc_t* pb_event_idc_list_t::mutable_ev_idcs_done(int index) {
  return ev_idcs_done_.Mutable(index);
}
inline ::commonproto::pb_event_idc_t* pb_event_idc_list_t::add_ev_idcs_done() {
  return ev_idcs_done_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_idc_t >&
pb_event_idc_list_t::ev_idcs_done() const {
  return ev_idcs_done_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_idc_t >*
pb_event_idc_list_t::mutable_ev_idcs_done() {
  return &ev_idcs_done_;
}

// -------------------------------------------------------------------

// pb_event_op_t

// required uint32 hero_id = 1;
inline bool pb_event_op_t::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_event_op_t::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_event_op_t::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_event_op_t::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 pb_event_op_t::hero_id() const {
  return hero_id_;
}
inline void pb_event_op_t::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// required uint32 val = 2;
inline bool pb_event_op_t::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_event_op_t::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_event_op_t::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_event_op_t::clear_val() {
  val_ = 0u;
  clear_has_val();
}
inline ::google::protobuf::uint32 pb_event_op_t::val() const {
  return val_;
}
inline void pb_event_op_t::set_val(::google::protobuf::uint32 value) {
  set_has_val();
  val_ = value;
}

// -------------------------------------------------------------------

// pb_event_op_list_t

// repeated .commonproto.pb_event_op_t event_op = 1;
inline int pb_event_op_list_t::event_op_size() const {
  return event_op_.size();
}
inline void pb_event_op_list_t::clear_event_op() {
  event_op_.Clear();
}
inline const ::commonproto::pb_event_op_t& pb_event_op_list_t::event_op(int index) const {
  return event_op_.Get(index);
}
inline ::commonproto::pb_event_op_t* pb_event_op_list_t::mutable_event_op(int index) {
  return event_op_.Mutable(index);
}
inline ::commonproto::pb_event_op_t* pb_event_op_list_t::add_event_op() {
  return event_op_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_op_t >&
pb_event_op_list_t::event_op() const {
  return event_op_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_event_op_t >*
pb_event_op_list_t::mutable_event_op() {
  return &event_op_;
}

// -------------------------------------------------------------------

// pb_money_t

// required .commonproto.pb_money_type_t type = 1;
inline bool pb_money_t::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_money_t::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_money_t::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_money_t::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::commonproto::pb_money_type_t pb_money_t::type() const {
  return static_cast< ::commonproto::pb_money_type_t >(type_);
}
inline void pb_money_t::set_type(::commonproto::pb_money_type_t value) {
  assert(::commonproto::pb_money_type_t_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint32 count = 2;
inline bool pb_money_t::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_money_t::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_money_t::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_money_t::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 pb_money_t::count() const {
  return count_;
}
inline void pb_money_t::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// pb_attachment_t

// optional .commonproto.pb_item_list_t item_list = 1;
inline bool pb_attachment_t::has_item_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_attachment_t::set_has_item_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_attachment_t::clear_has_item_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_attachment_t::clear_item_list() {
  if (item_list_ != NULL) item_list_->::commonproto::pb_item_list_t::Clear();
  clear_has_item_list();
}
inline const ::commonproto::pb_item_list_t& pb_attachment_t::item_list() const {
  return item_list_ != NULL ? *item_list_ : *default_instance_->item_list_;
}
inline ::commonproto::pb_item_list_t* pb_attachment_t::mutable_item_list() {
  set_has_item_list();
  if (item_list_ == NULL) item_list_ = new ::commonproto::pb_item_list_t;
  return item_list_;
}
inline ::commonproto::pb_item_list_t* pb_attachment_t::release_item_list() {
  clear_has_item_list();
  ::commonproto::pb_item_list_t* temp = item_list_;
  item_list_ = NULL;
  return temp;
}
inline void pb_attachment_t::set_allocated_item_list(::commonproto::pb_item_list_t* item_list) {
  delete item_list_;
  item_list_ = item_list;
  if (item_list) {
    set_has_item_list();
  } else {
    clear_has_item_list();
  }
}

// repeated .commonproto.pb_money_t moneys = 2;
inline int pb_attachment_t::moneys_size() const {
  return moneys_.size();
}
inline void pb_attachment_t::clear_moneys() {
  moneys_.Clear();
}
inline const ::commonproto::pb_money_t& pb_attachment_t::moneys(int index) const {
  return moneys_.Get(index);
}
inline ::commonproto::pb_money_t* pb_attachment_t::mutable_moneys(int index) {
  return moneys_.Mutable(index);
}
inline ::commonproto::pb_money_t* pb_attachment_t::add_moneys() {
  return moneys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_money_t >&
pb_attachment_t::moneys() const {
  return moneys_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_money_t >*
pb_attachment_t::mutable_moneys() {
  return &moneys_;
}

// -------------------------------------------------------------------

// pb_mail_t

// required uint32 mail_id = 1;
inline bool pb_mail_t::has_mail_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_mail_t::set_has_mail_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_mail_t::clear_has_mail_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_mail_t::clear_mail_id() {
  mail_id_ = 0u;
  clear_has_mail_id();
}
inline ::google::protobuf::uint32 pb_mail_t::mail_id() const {
  return mail_id_;
}
inline void pb_mail_t::set_mail_id(::google::protobuf::uint32 value) {
  set_has_mail_id();
  mail_id_ = value;
}

// required string title = 2;
inline bool pb_mail_t::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_mail_t::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_mail_t::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_mail_t::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& pb_mail_t::title() const {
  return *title_;
}
inline void pb_mail_t::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void pb_mail_t::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void pb_mail_t::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* pb_mail_t::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* pb_mail_t::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void pb_mail_t::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string sender = 3;
inline bool pb_mail_t::has_sender() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_mail_t::set_has_sender() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_mail_t::clear_has_sender() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_mail_t::clear_sender() {
  if (sender_ != &::google::protobuf::internal::kEmptyString) {
    sender_->clear();
  }
  clear_has_sender();
}
inline const ::std::string& pb_mail_t::sender() const {
  return *sender_;
}
inline void pb_mail_t::set_sender(const ::std::string& value) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  sender_->assign(value);
}
inline void pb_mail_t::set_sender(const char* value) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  sender_->assign(value);
}
inline void pb_mail_t::set_sender(const char* value, size_t size) {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  sender_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* pb_mail_t::mutable_sender() {
  set_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    sender_ = new ::std::string;
  }
  return sender_;
}
inline ::std::string* pb_mail_t::release_sender() {
  clear_has_sender();
  if (sender_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sender_;
    sender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void pb_mail_t::set_allocated_sender(::std::string* sender) {
  if (sender_ != &::google::protobuf::internal::kEmptyString) {
    delete sender_;
  }
  if (sender) {
    set_has_sender();
    sender_ = sender;
  } else {
    clear_has_sender();
    sender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string content = 4;
inline bool pb_mail_t::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pb_mail_t::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pb_mail_t::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pb_mail_t::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& pb_mail_t::content() const {
  return *content_;
}
inline void pb_mail_t::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void pb_mail_t::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void pb_mail_t::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* pb_mail_t::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* pb_mail_t::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void pb_mail_t::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 timestamp = 5;
inline bool pb_mail_t::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void pb_mail_t::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void pb_mail_t::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void pb_mail_t::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 pb_mail_t::timestamp() const {
  return timestamp_;
}
inline void pb_mail_t::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// required uint32 read_mark = 6;
inline bool pb_mail_t::has_read_mark() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void pb_mail_t::set_has_read_mark() {
  _has_bits_[0] |= 0x00000020u;
}
inline void pb_mail_t::clear_has_read_mark() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void pb_mail_t::clear_read_mark() {
  read_mark_ = 0u;
  clear_has_read_mark();
}
inline ::google::protobuf::uint32 pb_mail_t::read_mark() const {
  return read_mark_;
}
inline void pb_mail_t::set_read_mark(::google::protobuf::uint32 value) {
  set_has_read_mark();
  read_mark_ = value;
}

// optional .commonproto.pb_attachment_t attachment = 7;
inline bool pb_mail_t::has_attachment() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void pb_mail_t::set_has_attachment() {
  _has_bits_[0] |= 0x00000040u;
}
inline void pb_mail_t::clear_has_attachment() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void pb_mail_t::clear_attachment() {
  if (attachment_ != NULL) attachment_->::commonproto::pb_attachment_t::Clear();
  clear_has_attachment();
}
inline const ::commonproto::pb_attachment_t& pb_mail_t::attachment() const {
  return attachment_ != NULL ? *attachment_ : *default_instance_->attachment_;
}
inline ::commonproto::pb_attachment_t* pb_mail_t::mutable_attachment() {
  set_has_attachment();
  if (attachment_ == NULL) attachment_ = new ::commonproto::pb_attachment_t;
  return attachment_;
}
inline ::commonproto::pb_attachment_t* pb_mail_t::release_attachment() {
  clear_has_attachment();
  ::commonproto::pb_attachment_t* temp = attachment_;
  attachment_ = NULL;
  return temp;
}
inline void pb_mail_t::set_allocated_attachment(::commonproto::pb_attachment_t* attachment) {
  delete attachment_;
  attachment_ = attachment;
  if (attachment) {
    set_has_attachment();
  } else {
    clear_has_attachment();
  }
}

// -------------------------------------------------------------------

// pb_mail_list_t

// repeated .commonproto.pb_mail_t mails = 1;
inline int pb_mail_list_t::mails_size() const {
  return mails_.size();
}
inline void pb_mail_list_t::clear_mails() {
  mails_.Clear();
}
inline const ::commonproto::pb_mail_t& pb_mail_list_t::mails(int index) const {
  return mails_.Get(index);
}
inline ::commonproto::pb_mail_t* pb_mail_list_t::mutable_mails(int index) {
  return mails_.Mutable(index);
}
inline ::commonproto::pb_mail_t* pb_mail_list_t::add_mails() {
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_mail_t >&
pb_mail_list_t::mails() const {
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_mail_t >*
pb_mail_list_t::mutable_mails() {
  return &mails_;
}

// -------------------------------------------------------------------

// pb_challenge_player_t

// required uint32 uid = 1;
inline bool pb_challenge_player_t::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_challenge_player_t::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_challenge_player_t::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_challenge_player_t::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 pb_challenge_player_t::uid() const {
  return uid_;
}
inline void pb_challenge_player_t::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string nick = 2;
inline bool pb_challenge_player_t::has_nick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_challenge_player_t::set_has_nick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_challenge_player_t::clear_has_nick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_challenge_player_t::clear_nick() {
  if (nick_ != &::google::protobuf::internal::kEmptyString) {
    nick_->clear();
  }
  clear_has_nick();
}
inline const ::std::string& pb_challenge_player_t::nick() const {
  return *nick_;
}
inline void pb_challenge_player_t::set_nick(const ::std::string& value) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(value);
}
inline void pb_challenge_player_t::set_nick(const char* value) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(value);
}
inline void pb_challenge_player_t::set_nick(const char* value, size_t size) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* pb_challenge_player_t::mutable_nick() {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  return nick_;
}
inline ::std::string* pb_challenge_player_t::release_nick() {
  clear_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_;
    nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void pb_challenge_player_t::set_allocated_nick(::std::string* nick) {
  if (nick_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_;
  }
  if (nick) {
    set_has_nick();
    nick_ = nick;
  } else {
    clear_has_nick();
    nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 lv = 3;
inline bool pb_challenge_player_t::has_lv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_challenge_player_t::set_has_lv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_challenge_player_t::clear_has_lv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_challenge_player_t::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 pb_challenge_player_t::lv() const {
  return lv_;
}
inline void pb_challenge_player_t::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// required uint32 btl_val = 4;
inline bool pb_challenge_player_t::has_btl_val() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pb_challenge_player_t::set_has_btl_val() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pb_challenge_player_t::clear_has_btl_val() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pb_challenge_player_t::clear_btl_val() {
  btl_val_ = 0u;
  clear_has_btl_val();
}
inline ::google::protobuf::uint32 pb_challenge_player_t::btl_val() const {
  return btl_val_;
}
inline void pb_challenge_player_t::set_btl_val(::google::protobuf::uint32 value) {
  set_has_btl_val();
  btl_val_ = value;
}

// required uint32 win_count = 5;
inline bool pb_challenge_player_t::has_win_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void pb_challenge_player_t::set_has_win_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void pb_challenge_player_t::clear_has_win_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void pb_challenge_player_t::clear_win_count() {
  win_count_ = 0u;
  clear_has_win_count();
}
inline ::google::protobuf::uint32 pb_challenge_player_t::win_count() const {
  return win_count_;
}
inline void pb_challenge_player_t::set_win_count(::google::protobuf::uint32 value) {
  set_has_win_count();
  win_count_ = value;
}

// required uint32 rank = 6;
inline bool pb_challenge_player_t::has_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void pb_challenge_player_t::set_has_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void pb_challenge_player_t::clear_has_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void pb_challenge_player_t::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 pb_challenge_player_t::rank() const {
  return rank_;
}
inline void pb_challenge_player_t::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// repeated .commonproto.pb_hero_t chal_hero = 7;
inline int pb_challenge_player_t::chal_hero_size() const {
  return chal_hero_.size();
}
inline void pb_challenge_player_t::clear_chal_hero() {
  chal_hero_.Clear();
}
inline const ::commonproto::pb_hero_t& pb_challenge_player_t::chal_hero(int index) const {
  return chal_hero_.Get(index);
}
inline ::commonproto::pb_hero_t* pb_challenge_player_t::mutable_chal_hero(int index) {
  return chal_hero_.Mutable(index);
}
inline ::commonproto::pb_hero_t* pb_challenge_player_t::add_chal_hero() {
  return chal_hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_t >&
pb_challenge_player_t::chal_hero() const {
  return chal_hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_hero_t >*
pb_challenge_player_t::mutable_chal_hero() {
  return &chal_hero_;
}

// -------------------------------------------------------------------

// pb_challenge_list_t

// repeated .commonproto.pb_challenge_player_t challenge_player = 1;
inline int pb_challenge_list_t::challenge_player_size() const {
  return challenge_player_.size();
}
inline void pb_challenge_list_t::clear_challenge_player() {
  challenge_player_.Clear();
}
inline const ::commonproto::pb_challenge_player_t& pb_challenge_list_t::challenge_player(int index) const {
  return challenge_player_.Get(index);
}
inline ::commonproto::pb_challenge_player_t* pb_challenge_list_t::mutable_challenge_player(int index) {
  return challenge_player_.Mutable(index);
}
inline ::commonproto::pb_challenge_player_t* pb_challenge_list_t::add_challenge_player() {
  return challenge_player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_challenge_player_t >&
pb_challenge_list_t::challenge_player() const {
  return challenge_player_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_challenge_player_t >*
pb_challenge_list_t::mutable_challenge_player() {
  return &challenge_player_;
}

// -------------------------------------------------------------------

// pb_exped_opponent_t

// required .commonproto.pb_challenge_player_t chl_player = 1;
inline bool pb_exped_opponent_t::has_chl_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_exped_opponent_t::set_has_chl_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_exped_opponent_t::clear_has_chl_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_exped_opponent_t::clear_chl_player() {
  if (chl_player_ != NULL) chl_player_->::commonproto::pb_challenge_player_t::Clear();
  clear_has_chl_player();
}
inline const ::commonproto::pb_challenge_player_t& pb_exped_opponent_t::chl_player() const {
  return chl_player_ != NULL ? *chl_player_ : *default_instance_->chl_player_;
}
inline ::commonproto::pb_challenge_player_t* pb_exped_opponent_t::mutable_chl_player() {
  set_has_chl_player();
  if (chl_player_ == NULL) chl_player_ = new ::commonproto::pb_challenge_player_t;
  return chl_player_;
}
inline ::commonproto::pb_challenge_player_t* pb_exped_opponent_t::release_chl_player() {
  clear_has_chl_player();
  ::commonproto::pb_challenge_player_t* temp = chl_player_;
  chl_player_ = NULL;
  return temp;
}
inline void pb_exped_opponent_t::set_allocated_chl_player(::commonproto::pb_challenge_player_t* chl_player) {
  delete chl_player_;
  chl_player_ = chl_player;
  if (chl_player) {
    set_has_chl_player();
  } else {
    clear_has_chl_player();
  }
}

// -------------------------------------------------------------------

// pb_exped_opponent_list_t

// repeated .commonproto.pb_exped_opponent_t exped_opponents = 1;
inline int pb_exped_opponent_list_t::exped_opponents_size() const {
  return exped_opponents_.size();
}
inline void pb_exped_opponent_list_t::clear_exped_opponents() {
  exped_opponents_.Clear();
}
inline const ::commonproto::pb_exped_opponent_t& pb_exped_opponent_list_t::exped_opponents(int index) const {
  return exped_opponents_.Get(index);
}
inline ::commonproto::pb_exped_opponent_t* pb_exped_opponent_list_t::mutable_exped_opponents(int index) {
  return exped_opponents_.Mutable(index);
}
inline ::commonproto::pb_exped_opponent_t* pb_exped_opponent_list_t::add_exped_opponents() {
  return exped_opponents_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_exped_opponent_t >&
pb_exped_opponent_list_t::exped_opponents() const {
  return exped_opponents_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_exped_opponent_t >*
pb_exped_opponent_list_t::mutable_exped_opponents() {
  return &exped_opponents_;
}

// -------------------------------------------------------------------

// pb_arena_history_entry_t

// required .commonproto.pb_challenge_player_t challenge_player = 1;
inline bool pb_arena_history_entry_t::has_challenge_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_arena_history_entry_t::set_has_challenge_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_arena_history_entry_t::clear_has_challenge_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_arena_history_entry_t::clear_challenge_player() {
  if (challenge_player_ != NULL) challenge_player_->::commonproto::pb_challenge_player_t::Clear();
  clear_has_challenge_player();
}
inline const ::commonproto::pb_challenge_player_t& pb_arena_history_entry_t::challenge_player() const {
  return challenge_player_ != NULL ? *challenge_player_ : *default_instance_->challenge_player_;
}
inline ::commonproto::pb_challenge_player_t* pb_arena_history_entry_t::mutable_challenge_player() {
  set_has_challenge_player();
  if (challenge_player_ == NULL) challenge_player_ = new ::commonproto::pb_challenge_player_t;
  return challenge_player_;
}
inline ::commonproto::pb_challenge_player_t* pb_arena_history_entry_t::release_challenge_player() {
  clear_has_challenge_player();
  ::commonproto::pb_challenge_player_t* temp = challenge_player_;
  challenge_player_ = NULL;
  return temp;
}
inline void pb_arena_history_entry_t::set_allocated_challenge_player(::commonproto::pb_challenge_player_t* challenge_player) {
  delete challenge_player_;
  challenge_player_ = challenge_player;
  if (challenge_player) {
    set_has_challenge_player();
  } else {
    clear_has_challenge_player();
  }
}

// required bool b_success = 2;
inline bool pb_arena_history_entry_t::has_b_success() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_arena_history_entry_t::set_has_b_success() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_arena_history_entry_t::clear_has_b_success() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_arena_history_entry_t::clear_b_success() {
  b_success_ = false;
  clear_has_b_success();
}
inline bool pb_arena_history_entry_t::b_success() const {
  return b_success_;
}
inline void pb_arena_history_entry_t::set_b_success(bool value) {
  set_has_b_success();
  b_success_ = value;
}

// -------------------------------------------------------------------

// pb_exped_history_entry_t

// required uint32 oppon_uid = 1;
inline bool pb_exped_history_entry_t::has_oppon_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_exped_history_entry_t::set_has_oppon_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_exped_history_entry_t::clear_has_oppon_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_exped_history_entry_t::clear_oppon_uid() {
  oppon_uid_ = 0u;
  clear_has_oppon_uid();
}
inline ::google::protobuf::uint32 pb_exped_history_entry_t::oppon_uid() const {
  return oppon_uid_;
}
inline void pb_exped_history_entry_t::set_oppon_uid(::google::protobuf::uint32 value) {
  set_has_oppon_uid();
  oppon_uid_ = value;
}

// required string oppon_nick = 2;
inline bool pb_exped_history_entry_t::has_oppon_nick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_exped_history_entry_t::set_has_oppon_nick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_exped_history_entry_t::clear_has_oppon_nick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_exped_history_entry_t::clear_oppon_nick() {
  if (oppon_nick_ != &::google::protobuf::internal::kEmptyString) {
    oppon_nick_->clear();
  }
  clear_has_oppon_nick();
}
inline const ::std::string& pb_exped_history_entry_t::oppon_nick() const {
  return *oppon_nick_;
}
inline void pb_exped_history_entry_t::set_oppon_nick(const ::std::string& value) {
  set_has_oppon_nick();
  if (oppon_nick_ == &::google::protobuf::internal::kEmptyString) {
    oppon_nick_ = new ::std::string;
  }
  oppon_nick_->assign(value);
}
inline void pb_exped_history_entry_t::set_oppon_nick(const char* value) {
  set_has_oppon_nick();
  if (oppon_nick_ == &::google::protobuf::internal::kEmptyString) {
    oppon_nick_ = new ::std::string;
  }
  oppon_nick_->assign(value);
}
inline void pb_exped_history_entry_t::set_oppon_nick(const char* value, size_t size) {
  set_has_oppon_nick();
  if (oppon_nick_ == &::google::protobuf::internal::kEmptyString) {
    oppon_nick_ = new ::std::string;
  }
  oppon_nick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* pb_exped_history_entry_t::mutable_oppon_nick() {
  set_has_oppon_nick();
  if (oppon_nick_ == &::google::protobuf::internal::kEmptyString) {
    oppon_nick_ = new ::std::string;
  }
  return oppon_nick_;
}
inline ::std::string* pb_exped_history_entry_t::release_oppon_nick() {
  clear_has_oppon_nick();
  if (oppon_nick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = oppon_nick_;
    oppon_nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void pb_exped_history_entry_t::set_allocated_oppon_nick(::std::string* oppon_nick) {
  if (oppon_nick_ != &::google::protobuf::internal::kEmptyString) {
    delete oppon_nick_;
  }
  if (oppon_nick) {
    set_has_oppon_nick();
    oppon_nick_ = oppon_nick;
  } else {
    clear_has_oppon_nick();
    oppon_nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// pb_exped_survive_hero_t

// required uint32 hero_id = 1;
inline bool pb_exped_survive_hero_t::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_exped_survive_hero_t::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_exped_survive_hero_t::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_exped_survive_hero_t::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 pb_exped_survive_hero_t::hero_id() const {
  return hero_id_;
}
inline void pb_exped_survive_hero_t::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// required uint32 hero_hp = 2;
inline bool pb_exped_survive_hero_t::has_hero_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_exped_survive_hero_t::set_has_hero_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_exped_survive_hero_t::clear_has_hero_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_exped_survive_hero_t::clear_hero_hp() {
  hero_hp_ = 0u;
  clear_has_hero_hp();
}
inline ::google::protobuf::uint32 pb_exped_survive_hero_t::hero_hp() const {
  return hero_hp_;
}
inline void pb_exped_survive_hero_t::set_hero_hp(::google::protobuf::uint32 value) {
  set_has_hero_hp();
  hero_hp_ = value;
}

// required uint32 hero_cd = 3;
inline bool pb_exped_survive_hero_t::has_hero_cd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_exped_survive_hero_t::set_has_hero_cd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_exped_survive_hero_t::clear_has_hero_cd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_exped_survive_hero_t::clear_hero_cd() {
  hero_cd_ = 0u;
  clear_has_hero_cd();
}
inline ::google::protobuf::uint32 pb_exped_survive_hero_t::hero_cd() const {
  return hero_cd_;
}
inline void pb_exped_survive_hero_t::set_hero_cd(::google::protobuf::uint32 value) {
  set_has_hero_cd();
  hero_cd_ = value;
}

// required bool b_dead = 4;
inline bool pb_exped_survive_hero_t::has_b_dead() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pb_exped_survive_hero_t::set_has_b_dead() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pb_exped_survive_hero_t::clear_has_b_dead() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pb_exped_survive_hero_t::clear_b_dead() {
  b_dead_ = false;
  clear_has_b_dead();
}
inline bool pb_exped_survive_hero_t::b_dead() const {
  return b_dead_;
}
inline void pb_exped_survive_hero_t::set_b_dead(bool value) {
  set_has_b_dead();
  b_dead_ = value;
}

// -------------------------------------------------------------------

// pb_exped_survive_hero_list_t

// repeated .commonproto.pb_exped_survive_hero_t survive_hero = 1;
inline int pb_exped_survive_hero_list_t::survive_hero_size() const {
  return survive_hero_.size();
}
inline void pb_exped_survive_hero_list_t::clear_survive_hero() {
  survive_hero_.Clear();
}
inline const ::commonproto::pb_exped_survive_hero_t& pb_exped_survive_hero_list_t::survive_hero(int index) const {
  return survive_hero_.Get(index);
}
inline ::commonproto::pb_exped_survive_hero_t* pb_exped_survive_hero_list_t::mutable_survive_hero(int index) {
  return survive_hero_.Mutable(index);
}
inline ::commonproto::pb_exped_survive_hero_t* pb_exped_survive_hero_list_t::add_survive_hero() {
  return survive_hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_exped_survive_hero_t >&
pb_exped_survive_hero_list_t::survive_hero() const {
  return survive_hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_exped_survive_hero_t >*
pb_exped_survive_hero_list_t::mutable_survive_hero() {
  return &survive_hero_;
}

// -------------------------------------------------------------------

// pb_rank_player_t

// required string nick = 1;
inline bool pb_rank_player_t::has_nick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pb_rank_player_t::set_has_nick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pb_rank_player_t::clear_has_nick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pb_rank_player_t::clear_nick() {
  if (nick_ != &::google::protobuf::internal::kEmptyString) {
    nick_->clear();
  }
  clear_has_nick();
}
inline const ::std::string& pb_rank_player_t::nick() const {
  return *nick_;
}
inline void pb_rank_player_t::set_nick(const ::std::string& value) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(value);
}
inline void pb_rank_player_t::set_nick(const char* value) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(value);
}
inline void pb_rank_player_t::set_nick(const char* value, size_t size) {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  nick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* pb_rank_player_t::mutable_nick() {
  set_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    nick_ = new ::std::string;
  }
  return nick_;
}
inline ::std::string* pb_rank_player_t::release_nick() {
  clear_has_nick();
  if (nick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_;
    nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void pb_rank_player_t::set_allocated_nick(::std::string* nick) {
  if (nick_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_;
  }
  if (nick) {
    set_has_nick();
    nick_ = nick;
  } else {
    clear_has_nick();
    nick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 stars = 2;
inline bool pb_rank_player_t::has_stars() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pb_rank_player_t::set_has_stars() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pb_rank_player_t::clear_has_stars() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pb_rank_player_t::clear_stars() {
  stars_ = 0u;
  clear_has_stars();
}
inline ::google::protobuf::uint32 pb_rank_player_t::stars() const {
  return stars_;
}
inline void pb_rank_player_t::set_stars(::google::protobuf::uint32 value) {
  set_has_stars();
  stars_ = value;
}

// optional string union_name = 3;
inline bool pb_rank_player_t::has_union_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pb_rank_player_t::set_has_union_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pb_rank_player_t::clear_has_union_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pb_rank_player_t::clear_union_name() {
  if (union_name_ != &::google::protobuf::internal::kEmptyString) {
    union_name_->clear();
  }
  clear_has_union_name();
}
inline const ::std::string& pb_rank_player_t::union_name() const {
  return *union_name_;
}
inline void pb_rank_player_t::set_union_name(const ::std::string& value) {
  set_has_union_name();
  if (union_name_ == &::google::protobuf::internal::kEmptyString) {
    union_name_ = new ::std::string;
  }
  union_name_->assign(value);
}
inline void pb_rank_player_t::set_union_name(const char* value) {
  set_has_union_name();
  if (union_name_ == &::google::protobuf::internal::kEmptyString) {
    union_name_ = new ::std::string;
  }
  union_name_->assign(value);
}
inline void pb_rank_player_t::set_union_name(const char* value, size_t size) {
  set_has_union_name();
  if (union_name_ == &::google::protobuf::internal::kEmptyString) {
    union_name_ = new ::std::string;
  }
  union_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* pb_rank_player_t::mutable_union_name() {
  set_has_union_name();
  if (union_name_ == &::google::protobuf::internal::kEmptyString) {
    union_name_ = new ::std::string;
  }
  return union_name_;
}
inline ::std::string* pb_rank_player_t::release_union_name() {
  clear_has_union_name();
  if (union_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = union_name_;
    union_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void pb_rank_player_t::set_allocated_union_name(::std::string* union_name) {
  if (union_name_ != &::google::protobuf::internal::kEmptyString) {
    delete union_name_;
  }
  if (union_name) {
    set_has_union_name();
    union_name_ = union_name;
  } else {
    clear_has_union_name();
    union_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// pb_rank_player_list_t

// repeated .commonproto.pb_rank_player_t rank_players = 1;
inline int pb_rank_player_list_t::rank_players_size() const {
  return rank_players_.size();
}
inline void pb_rank_player_list_t::clear_rank_players() {
  rank_players_.Clear();
}
inline const ::commonproto::pb_rank_player_t& pb_rank_player_list_t::rank_players(int index) const {
  return rank_players_.Get(index);
}
inline ::commonproto::pb_rank_player_t* pb_rank_player_list_t::mutable_rank_players(int index) {
  return rank_players_.Mutable(index);
}
inline ::commonproto::pb_rank_player_t* pb_rank_player_list_t::add_rank_players() {
  return rank_players_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::commonproto::pb_rank_player_t >&
pb_rank_player_list_t::rank_players() const {
  return rank_players_;
}
inline ::google::protobuf::RepeatedPtrField< ::commonproto::pb_rank_player_t >*
pb_rank_player_list_t::mutable_rank_players() {
  return &rank_players_;
}

// -------------------------------------------------------------------

// pb_enemies_rank_list_t

// repeated uint32 enemies_ranks = 1;
inline int pb_enemies_rank_list_t::enemies_ranks_size() const {
  return enemies_ranks_.size();
}
inline void pb_enemies_rank_list_t::clear_enemies_ranks() {
  enemies_ranks_.Clear();
}
inline ::google::protobuf::uint32 pb_enemies_rank_list_t::enemies_ranks(int index) const {
  return enemies_ranks_.Get(index);
}
inline void pb_enemies_rank_list_t::set_enemies_ranks(int index, ::google::protobuf::uint32 value) {
  enemies_ranks_.Set(index, value);
}
inline void pb_enemies_rank_list_t::add_enemies_ranks(::google::protobuf::uint32 value) {
  enemies_ranks_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
pb_enemies_rank_list_t::enemies_ranks() const {
  return enemies_ranks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
pb_enemies_rank_list_t::mutable_enemies_ranks() {
  return &enemies_ranks_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace commonproto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_server_type_t>() {
  return ::commonproto::pb_server_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_server_state_t>() {
  return ::commonproto::pb_server_state_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_money_type_t>() {
  return ::commonproto::pb_money_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_unlock_type_t>() {
  return ::commonproto::pb_unlock_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_novice_type_t>() {
  return ::commonproto::pb_novice_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_open_type_t>() {
  return ::commonproto::pb_open_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_level_star_t>() {
  return ::commonproto::pb_level_star_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_level_type_t>() {
  return ::commonproto::pb_level_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_queue_type_t>() {
  return ::commonproto::pb_queue_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_event_type_t>() {
  return ::commonproto::pb_event_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_hero_attr_type_t>() {
  return ::commonproto::pb_hero_attr_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_skill_type_t>() {
  return ::commonproto::pb_skill_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_lottery_type_t>() {
  return ::commonproto::pb_lottery_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_saodang_type_t>() {
  return ::commonproto::pb_saodang_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_midas_type_t>() {
  return ::commonproto::pb_midas_type_t_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::commonproto::pb_stamina_task_type_t>() {
  return ::commonproto::pb_stamina_task_type_t_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2eproto__INCLUDED
